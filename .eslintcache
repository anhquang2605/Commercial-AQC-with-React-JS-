[{"C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\index.js":"1","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\reportWebVitals.js":"2","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\App\\index.js":"3","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\Constants\\Routes.js":"4","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\Constants\\NavigationItems.js":"5","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\Home\\index.js":"6","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\Navigator\\index.js":"7","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\SearchResult\\index.js":"8","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\model\\Orders.js":"9","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\NavBar\\index.js":"10","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\Logo\\index.js":"11","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\Home\\FeaturedItems\\index.js":"12","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\Home\\Banner\\index.js":"13","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\SearchBar\\index.js":"14","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\SearchResult\\SearchForm\\index.js":"15","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\SearchResult\\ResultDisplay\\index.js":"16","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\SearchResult\\Sorter\\index.js":"17","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\model\\BannerList.js":"18","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\Home\\Banner\\BannerBox\\index.js":"19","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\OrderWidget\\index.js":"20","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\Home\\Banner\\Controller\\index.js":"21","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\Home\\Banner\\Pagination\\index.js":"22","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\Home\\Banner\\BannerItem\\index.js":"23"},{"size":505,"mtime":1609022016350,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1609022016355,"results":"26","hashOfConfig":"25"},{"size":1385,"mtime":1609801179788,"results":"27","hashOfConfig":"25"},{"size":225,"mtime":1609801179788,"results":"28","hashOfConfig":"25"},{"size":275,"mtime":1609801179788,"results":"29","hashOfConfig":"25"},{"size":617,"mtime":1609022016280,"results":"30","hashOfConfig":"25"},{"size":602,"mtime":1609022016285,"results":"31","hashOfConfig":"25"},{"size":1324,"mtime":1609803768904,"results":"32","hashOfConfig":"25"},{"size":5787,"mtime":1609801179819,"results":"33","hashOfConfig":"25"},{"size":632,"mtime":1609022016283,"results":"34","hashOfConfig":"25"},{"size":411,"mtime":1609022016281,"results":"35","hashOfConfig":"25"},{"size":956,"mtime":1609801179804,"results":"36","hashOfConfig":"25"},{"size":10512,"mtime":1609801179803,"results":"37","hashOfConfig":"25"},{"size":830,"mtime":1609801179807,"results":"38","hashOfConfig":"25"},{"size":3109,"mtime":1609803972305,"results":"39","hashOfConfig":"25"},{"size":811,"mtime":1609805646734,"results":"40","hashOfConfig":"25"},{"size":230,"mtime":1609801179812,"results":"41","hashOfConfig":"25"},{"size":930,"mtime":1609801179817,"results":"42","hashOfConfig":"25"},{"size":1196,"mtime":1609801179788,"results":"43","hashOfConfig":"25"},{"size":1595,"mtime":1609801179806,"results":"44","hashOfConfig":"25"},{"size":395,"mtime":1609801179788,"results":"45","hashOfConfig":"25"},{"size":973,"mtime":1609801179788,"results":"46","hashOfConfig":"25"},{"size":1215,"mtime":1609801179788,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1xjhapv",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\index.js",[],["103","104"],"C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\reportWebVitals.js",[],"C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\App\\index.js",["105","106"],"import React from 'react';\r\nimport Navigator from '../Navigator';\r\nimport Home from '../Home';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport * as ROUTES from '../../Constants/Routes';\r\nimport * as NAVITEMS from \"../../Constants/NavigationItems\";\r\nimport SearchResult from '../SearchResult';\r\n/*const PageComponents = {\r\n    Home: Home,\r\n    Order: Order,\r\n    Account: Account,\r\n    KartDetail: KartDetail,\r\n    CustomerService: CustomerService\r\n}\r\n/*const  LISTOFROUTES = NAVITEMS.ITEMS.map((item)=>{\r\n    const TagName = item.name.split(' ').join('')\r\n    if(item.name == \"Home\"){\r\n        return <Route key={item.name} value ={item.route} exact path = {item.route} component={Home}/>\r\n    } else {\r\n        return <Route key={item.name} value ={item.route} path = {item.route} component={Home}/>\r\n    }\r\n}\r\n);*/\r\nclass App extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n        <Router>\r\n            <div className=\"commercial-AQC\">\r\n                <h1>Commercial website</h1>\r\n                <Navigator></Navigator>\r\n                <Route exact path = {ROUTES.HOME} component = {Home}/>\r\n                <Route path = {ROUTES.SEARCH_RESULT+\"/:name?/:type?/:spec?/:dis?\"} component = {SearchResult}/>\r\n            </div>\r\n        </Router>\r\n        )\r\n    }\r\n} \r\n\r\nexport default App;","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\Constants\\Routes.js",[],"C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\Constants\\NavigationItems.js",[],"C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\Home\\index.js",["107"],"import React from 'react';\r\nimport FeaturedItems from './FeaturedItems';\r\nimport ORDERS from '../../model/Orders';\r\nimport Banner from './Banner';\r\nconst LISTOFFEATURED = [];\r\n \r\nORDERS.forEach(ele => {\r\n    if(ele.featured){\r\n       LISTOFFEATURED.push(ele);\r\n    }\r\n});\r\nclass Home extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"Home_Page\">\r\n                <Banner></Banner>\r\n                <FeaturedItems listOfFeatured={LISTOFFEATURED}></FeaturedItems>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\Navigator\\index.js",[],"C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\SearchResult\\index.js",[],"C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\model\\Orders.js",[],"C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\NavBar\\index.js",[],"C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\Logo\\index.js",["108"],"import React from 'react';\r\n\r\nclass Logo extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            imgSrc: this.props.src,\r\n            href: this.props.href\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <a href={this.state.href}>\r\n                <img src= {this.state.imgSrc}/>\r\n            </a>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logo;","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\Home\\FeaturedItems\\index.js",["109"],"import React from 'react';\r\nimport OrderWidget from '../../OrderWidget';\r\nclass FeaturedItems extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            list: this.props.listOfFeatured\r\n        }\r\n        this.generateItems = this.generateItems.bind(this);\r\n    }\r\n    generateItems(){\r\n        let size = this.state.list.length;\r\n        let daList = this.state.list;\r\n        let daListComponent = daList.map(ele => {\r\n            return (\r\n                <OrderWidget key={ele.id} value={ele.name} id={ele.id} name={ele.name} quantity={ele.quantity} types={ele.types} price={ele.price}></OrderWidget>\r\n            )\r\n        })\r\n        return daListComponent;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"FeaturedItems\">\r\n                <h3>Featured Items</h3>\r\n                {this.generateItems()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FeaturedItems;","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\Home\\Banner\\index.js",["110","111","112","113","114","115"],"\r\nimport React, { Fragment } from 'react';\r\nimport BannerBox from './BannerBox';\r\nimport Controller from './Controller';\r\nimport BANNERLIST from '../../../model/BannerList';\r\nimport Pagination from './Pagination';\r\nimport './Banner.css';\r\nimport $ from 'jquery';\r\n//Data of Banner items \r\nlet NoOfItems = BANNERLIST.length;\r\nclass Banner extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            bannerWidth: 0,\r\n            bannerBoxWidth: 0,\r\n            bannerItemsNo: NoOfItems,\r\n            current: null,\r\n            next: null,\r\n            prev: null,\r\n            fist: null,\r\n            last: null,\r\n        }\r\n    }\r\n\r\n    JQUERY = () => {\r\n        var that = this;// refer to the instance of the Banner object to use later in the jquery codes\r\n        $(function(){\r\n            var $window = $(window);// window object does not need ''\r\n            var $body = $('body');\r\n            //set bannerWidth for individual width of each banner Item\r\n            let bodyWidth = $body.width();\r\n            let windowHeight = $window.height();\r\n            //set height for banner\r\n            $(\".Banner\").height((windowHeight * 60)/100);\r\n            that.setState({\r\n                bannerWidth: bodyWidth\r\n            })\r\n            //banner Box width is the total width of the containers of all the banner items,\r\n            //this container is hidden by the banner div that only show exactly one banner item at a time \r\n            that.setState({\r\n                bannerBoxWidth: bodyWidth*NoOfItems\r\n            })\r\n            //controllers code\r\n            //Animation handlers\r\n            let $moveRight = () =>{\r\n                $(\".banner-box\").animate({right: \"+=\" + that.state.bannerWidth},500);\r\n            };\r\n            let $moveLeft = () =>{\r\n                $(\".banner-box\").animate({right: \"-=\" + that.state.bannerWidth},500);\r\n            };\r\n            let $moveTo = (id,animated = true)  =>{\r\n                let parsedID = parseInt(id);\r\n                let current = that.getCurrent();\r\n                let currentID = current.index;\r\n                let idDifference = currentID - parsedID;\r\n                //calculating how far the box will be translated\r\n                let moveByTheWidthOf = Math.abs(idDifference) * that.state.bannerWidth;\r\n                //check if the destination is greater than or less comparing to the current id\r\n                //if greater, move to left, else to the right\r\n                if (animated){\r\n                    let $BannerBox = $(\".banner-box\");\r\n                    if(idDifference > 0){\r\n                        $BannerBox.animate({right: \"-=\" + moveByTheWidthOf},500); \r\n                    } else {\r\n                        $BannerBox.animate({right: \"+=\" + moveByTheWidthOf},500)\r\n                    }\r\n                } else {\r\n                    let $BannerBox = $(\".banner-box\");\r\n                    let $BannerBoxRight = parseInt($BannerBox.css(\"right\").replace(\"px\",\"\"));\r\n                    if(idDifference > 0){\r\n                        $BannerBox.css({\r\n                            \"right\": $BannerBoxRight - moveByTheWidthOf + \"px\"\r\n                        })\r\n                    } else {\r\n                        $BannerBox.css({\r\n                            \"right\": $BannerBoxRight + moveByTheWidthOf + \"px\"\r\n                        })\r\n                    }\r\n                }\r\n                \r\n                //Setting state for the banner items, current, prev and next\r\n                that.setCurrent(BANNERLIST[parsedID]);\r\n                if (parsedID == 0){//if the destination is first\r\n                    that.setPrev(that.getLast());\r\n                    that.setNext(BANNERLIST[parsedID + 1]);\r\n                } else if (parsedID == that.state.bannerItemsNo - 1){//if the destination is last\r\n                    that.setPrev(BANNERLIST[parsedID - 1]);\r\n                    that.setNext(that.getFirst());\r\n                } else {//the default ways for prev and next items\r\n                    that.setPrev(BANNERLIST[parsedID - 1]);\r\n                    that.setNext(BANNERLIST[parsedID+ 1]);\r\n                }\r\n                $(\".current\").removeClass(\"current\");\r\n                $(\".Pagination\").find(\"[index='\"+ parsedID + \"']\").addClass(\"current\");\r\n                return;\r\n            };\r\n            //get width when started the app or resizing a window for banner\r\n            $window.on(\"resize\", function(){\r\n                let currentSlide = that.getCurrent();\r\n                let curIndex = currentSlide.index;\r\n                let bodyWidth = $body.width();\r\n                let bannerBoxWidth = bodyWidth*NoOfItems;\r\n                that.setState({\r\n                    bannerWidth: bodyWidth\r\n                })\r\n                that.setState({\r\n                    bannerBoxWidth: bannerBoxWidth\r\n                })\r\n                //Height of Banner\r\n                let windowHeight = $window.height();\r\n                $(\".Banner\").height((windowHeight * 60)/100);\r\n                //return to its last position after reload\r\n                $(\".banner-box\").css({\"right\": curIndex * bodyWidth + \"px\"});\r\n                $(\".current\").removeClass(\"current\");\r\n                $(\".Pagination\").find(\"[index='\"+ curIndex +\"']\").addClass(\"current\");\r\n                \r\n            });\r\n            //Initiallize orders for banner lists \r\n            that.setCurrent(BANNERLIST[0]);\r\n            that.setNext(BANNERLIST[1]);\r\n            that.setPrev(BANNERLIST[that.state.bannerItemsNo - 1]);\r\n            that.setFirst(BANNERLIST[0]);\r\n            that.setLast(BANNERLIST[that.state.bannerItemsNo - 1]);\r\n            //cache of first and last items along with the left and right controllers\r\n            let firstItem = that.getFirst();\r\n            let lastItem = that.getLast();\r\n            let $left = $('.left-controller-banner');\r\n            let $right = $('.right-controller-banner');\r\n            //Left controller codes\r\n            $left.on(\"click\", function(e){\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                let cur = that.getCurrent();\r\n                let prev = that.getPrev();\r\n                let prevIndex = prev.index;\r\n                let curIndex = cur.index; \r\n                let newPrevIndex = prevIndex - 1;\r\n                //check if it has to move to the very end of the list\r\n                if(prevIndex == lastItem.index){\r\n                    $moveTo(lastItem.index);\r\n                } else {\r\n                    $moveLeft();\r\n                }\r\n                that.setCurrent(prev);\r\n                that.setNext(cur);\r\n                //Let Pagination components know to move to corresponding dot\r\n                $(\".current\").removeClass(\"current\");\r\n                $(\".Pagination\").find(\"[index='\"+ prev.index + \"']\").addClass(\"current\");\r\n                //check if it has to move to the very front of the list\r\n                if (newPrevIndex < 0) {\r\n                    that.setPrev(lastItem);\r\n                    return;\r\n                } \r\n                that.setPrev(BANNERLIST[newPrevIndex]);\r\n            });\r\n            //Right controller codes\r\n            $right.on(\"click\", function(e){\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                let cur = that.getCurrent();\r\n                let next = that.getNext();\r\n                let nextIndex = next.index;\r\n                let curIndex = cur.index; \r\n                let newNextIndex = nextIndex + 1;\r\n                if(nextIndex == firstItem.index){\r\n                    $moveTo(firstItem.index);\r\n                    return;\r\n                } else {\r\n                    $moveRight();\r\n                }\r\n                that.setCurrent(next);\r\n                that.setPrev(cur);\r\n                //Let Pagination components know to move to corresponding dot\r\n                $(\".current\").removeClass(\"current\");\r\n                $(\".Pagination\").find(\"[index='\"+ next.index + \"']\").addClass(\"current\");\r\n                if (newNextIndex > that.state.last.index) {\r\n                    that.setNext(firstItem);      \r\n                    return;\r\n                } \r\n                that.setNext(BANNERLIST[newNextIndex]);\r\n            })\r\n            //Pagination codes\r\n                $(\".page-dot\").first().addClass(\"current\");\r\n                $(\".page-dot\").on(\"click\",function(e){\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    let $this = $(this);\r\n                    $(\".current\").removeClass(\"current\");\r\n                    $this.addClass('current');\r\n                    $moveTo($this.attr(\"index\"));\r\n                });\r\n        })\r\n    }\r\n    componentDidMount = () => {\r\n        this.JQUERY();\r\n    }\r\n    componentWillUnmount() {\r\n        // fix Warning: Can't perform a React state update on an unmounted component\r\n        this.setState = (state,callback)=>{\r\n            return;\r\n        };\r\n    }\r\n    getCurrent = () => {\r\n        return this.state.current;\r\n    }\r\n    getNext = () => {\r\n        return this.state.next;\r\n    }\r\n    getPrev = () => {\r\n        return this.state.prev;\r\n    }\r\n    getNoOfItems = () =>{\r\n        return this.state.bannerItemsNo\r\n    }\r\n    setCurrent = (obj) => {\r\n        this.setState({\r\n            current: obj\r\n        });\r\n    }\r\n    getFirst = () => {\r\n        return this.state.first;\r\n    }\r\n    getLast = () =>{\r\n        return this.state.last;\r\n    }\r\n    setNext = (obj) => {\r\n        this.setState({\r\n            next: obj\r\n        });\r\n    }\r\n    setPrev = (obj) => {\r\n        this.setState({\r\n            prev: obj\r\n        });\r\n    }\r\n    setFirst = (obj) => {\r\n        this.setState({\r\n            first: obj\r\n        })\r\n    }\r\n    setLast = (obj) => {\r\n        this.setState({\r\n            last: obj\r\n        })\r\n    }\r\n    render() {\r\n        return(\r\n            <Fragment>\r\n            <div className=\"Banner\">\r\n                <Controller></Controller>\r\n                {/*key is needed for the Banner Box to update the passing props from Banner*/}\r\n                <BannerBox key={this.state.bannerBoxWidth} bannerBoxWidth={this.state.bannerBoxWidth} width={this.state.bannerWidth}></BannerBox>              \r\n            </div>\r\n            <Pagination NoOfItems={this.getNoOfItems()}></Pagination>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Banner;\r\n","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\SearchBar\\index.js",[],"C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\SearchResult\\SearchForm\\index.js",["116","117","118"],"import React, { Component } from 'react';\r\nimport './search-form.css';\r\nimport {BiX} from 'react-icons/bi';\r\nclass SearchForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: this.props.name? this.props.name.replaceAll(\"_\",\" \"): \"\",\r\n            maxPrice: 0,\r\n            minPrice: 0,\r\n            types: '',\r\n            avail: true,\r\n            valid: false,\r\n            validName: true,\r\n        }\r\n        this.onChangeMaxPrice = this.onChangeMaxPrice.bind(this);\r\n        this.onChangeMinPrice = this.onChangeMinPrice.bind(this);\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.searchResult = this.searchResult.bind(this);\r\n    }\r\n    onChangeName = (event) => {\r\n        let val = event.target.value;\r\n        if (val.length > 50 || val == \"\"){\r\n            this.setState({\r\n                validName: false,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                validName: true,\r\n            })\r\n        }\r\n        this.setState(()=>({\r\n            name: val\r\n        }));\r\n    }\r\n    onChangeMaxPrice = (event) => {\r\n        let val = event.target.value;\r\n        this.setState({\r\n            maxPrice: event.target.value\r\n        })\r\n    }\r\n    onChangeMinPrice = (event) => {\r\n        let val = event.target.value;\r\n        this.setState({\r\n            minPrice: event.target.value\r\n        })\r\n    }\r\n    searchResult = () => {\r\n        return 0;\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"search_form\">\r\n                <form>\r\n                    <label for=\"name\">Name</label>\r\n                    <br></br>\r\n                    <span className=\"input container\">\r\n                    <input className={this.state.validName? \"\" : \"not-valid\"} type=\"text\" id=\"name\" name=\"name\" value={this.state.name} onChange={this.onChangeName}></input>\r\n                    {   !this.state.validName &&\r\n                        <BiX></BiX>\r\n                    }\r\n                    </span>\r\n                    <br></br>\r\n                    <label for=\"maxPrice\">Max Price</label>\r\n                    <br></br>\r\n                    <span className=\"input container\">\r\n                    <input  type=\"number\" id=\"max_price\" name=\"maxPrice\" value={this.state.maxPrice} onChange={this.onChangeMaxPrice}></input>\r\n                    </span>\r\n                    <br></br>\r\n                    <label for=\"minPrice\">Min Price</label>\r\n                    <br></br>\r\n                    <span className=\"input container\">\r\n                    <input type=\"number\" id=\"min_price\" name=\"minPrice\" value={this.state.minPrice} onChange={this.onChangeMinPrice}></input>\r\n                    </span>\r\n                    <br></br>\r\n                    <label for=\"inStock\">In stock?</label>\r\n                    <input type=\"checkbox\"></input>\r\n                    <br></br>\r\n                    <button onClick={this.searchResult} disabled={!this.state.validName}>Search</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchForm;\r\n","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\SearchResult\\ResultDisplay\\index.js",["119"],"C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\SearchResult\\Sorter\\index.js",[],"C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\model\\BannerList.js",[],"C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\Home\\Banner\\BannerBox\\index.js",[],"C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\OrderWidget\\index.js",["120","121"],"import React from 'react';\r\nimport silver from './../../images/silver.png';\r\nimport {Link} from 'react-router-dom';\r\nimport * as ROUTES from '../../Constants/Routes';\r\nlet imgs = \"./silver.png\";\r\nclass OrderWidget extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.id,\r\n            name: this.props.name,\r\n            quantity: this.props.quantity,\r\n            inStock: this.props.quantity > 0,\r\n            types: this.props.types,\r\n            price: this.props.price,\r\n        }\r\n    }\r\n    imageGetter(id) {\r\n        return id + '-' + this.state.types[0] + \".jpg\";\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"widget\" disabled={this.state.inStock} href={\"/Order/\" + this.state.id}>\r\n                <div className=\"out-of-stock\" hidden={this.state.inStock}>Out of stock</div>\r\n                <Link to={ROUTES.ORDERS + \"/\" + this.state.id}>\r\n                    <img alt={this.state.name} className=\"widget-image\" src={require('./../../images/' + this.imageGetter(this.state.id))}></img>\r\n                </Link>\r\n                <div className=\"widget-info\">\r\n                    <span className=\"widget-item-name\">{this.state.name}</span><br></br>\r\n                    <span className=\"price-tag\">$ {this.state.price}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//for require to work with src path, needs to go to node_module/react_scripts/webpack.config.js to find \"url-loader\" config then add or change esModule in option to false\r\nexport default OrderWidget;","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\Home\\Banner\\Controller\\index.js",[],"C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\Home\\Banner\\Pagination\\index.js",["122"],"import React from 'react';\r\nimport './Pagination.css';\r\nimport {BsFillCircleFill as Circle} from 'react-icons/bs';\r\nfunction Pagedot(props) {\r\n    return(\r\n        <a href=\"#\" className=\"page-dot\" index={props.index}>\r\n            <Circle></Circle>\r\n        </a>\r\n    )\r\n\r\n};\r\nclass Pagination extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            NoOfItems: this.props.NoOfItems,\r\n            current: 0,\r\n            next: this.props.NoOfItems - 1,\r\n            prev: 0,\r\n        }\r\n    }\r\n    generateUI(){\r\n        var i = 0;\r\n        var max = this.state.NoOfItems;\r\n        var items = [];\r\n        for(i; i < max; i+=1){\r\n            items.push(<Pagedot key={i} index={i}></Pagedot>);\r\n        }\r\n        return items;   \r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"Pagination\">\r\n                {this.generateUI()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Pagination;","C:\\Users\\Chu\\front_end\\apps\\commercial-AQC\\src\\components\\Home\\Banner\\BannerItem\\index.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":6,"column":13,"nodeType":"129","messageId":"130","endLine":6,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":25,"column":5,"nodeType":"133","messageId":"134","endLine":27,"endColumn":6},{"ruleId":"131","severity":1,"message":"132","line":13,"column":5,"nodeType":"133","messageId":"134","endLine":15,"endColumn":6},{"ruleId":"135","severity":1,"message":"136","line":14,"column":17,"nodeType":"137","endLine":14,"endColumn":48},{"ruleId":"127","severity":1,"message":"138","line":12,"column":13,"nodeType":"129","messageId":"130","endLine":12,"endColumn":17},{"ruleId":"139","severity":1,"message":"140","line":84,"column":30,"nodeType":"141","messageId":"142","endLine":84,"endColumn":32},{"ruleId":"139","severity":1,"message":"140","line":87,"column":37,"nodeType":"141","messageId":"142","endLine":87,"endColumn":39},{"ruleId":"127","severity":1,"message":"143","line":137,"column":21,"nodeType":"129","messageId":"130","endLine":137,"endColumn":29},{"ruleId":"139","severity":1,"message":"140","line":140,"column":30,"nodeType":"141","messageId":"142","endLine":140,"endColumn":32},{"ruleId":"127","severity":1,"message":"143","line":164,"column":21,"nodeType":"129","messageId":"130","endLine":164,"endColumn":29},{"ruleId":"139","severity":1,"message":"140","line":166,"column":30,"nodeType":"141","messageId":"142","endLine":166,"endColumn":32},{"ruleId":"139","severity":1,"message":"140","line":23,"column":36,"nodeType":"141","messageId":"142","endLine":23,"endColumn":38},{"ruleId":"127","severity":1,"message":"144","line":37,"column":13,"nodeType":"129","messageId":"130","endLine":37,"endColumn":16},{"ruleId":"127","severity":1,"message":"144","line":43,"column":13,"nodeType":"129","messageId":"130","endLine":43,"endColumn":16},{"ruleId":"127","severity":1,"message":"145","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":19},{"ruleId":"127","severity":1,"message":"146","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":14},{"ruleId":"127","severity":1,"message":"147","line":5,"column":5,"nodeType":"129","messageId":"130","endLine":5,"endColumn":9},{"ruleId":"148","severity":1,"message":"149","line":6,"column":9,"nodeType":"137","endLine":6,"endColumn":62},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'NAVITEMS' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'size' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'curIndex' is assigned a value but never used.","'val' is assigned a value but never used.","'OrderWidget' is defined but never used.","'silver' is defined but never used.","'imgs' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]