[{"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\index.js":"1","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\reportWebVitals.js":"2","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\App\\index.js":"3","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\Constants\\Routes.js":"4","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Firebase\\index.js":"5","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\SearchBar\\index.js":"6","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Navigator\\index.js":"7","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Home\\index.js":"8","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Logo\\index.js":"9","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\NavBar\\index.js":"10","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\SearchResult\\index.js":"11","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\ShoppingCart\\index.js":"12","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\OrderDetail\\index.js":"13","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\Shortcut\\index.js":"14","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\index.js":"15","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\PlaceOrder\\index.js":"16","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\KartDetail\\index.js":"17","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\ThankYou\\index.js":"18","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\Cards\\index.js":"19","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\GCards\\index.js":"20","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\SignInUpButtons\\index.js":"21","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\Orders\\index.js":"22","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\SignUp\\index.js":"23","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Firebase\\context.js":"24","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Firebase\\firebase.js":"25","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\SignIn\\index.js":"26","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\CheckOut\\index.js":"27","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\Constants\\NavigationItems.js":"28","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\model\\Orders.js":"29","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\OrderDetail\\OrderTypesRadio\\OrderTypeRadio.js":"30","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\model\\GiftCards.js":"31","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Home\\FeaturedItems\\index.js":"32","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Home\\Banner\\index.js":"33","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\SearchResult\\Sorter\\index.js":"34","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\SearchResult\\SearchForm\\index.js":"35","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\OrderDetail\\ItemDetail\\index.js":"36","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\SearchResult\\ResultDisplay\\index.js":"37","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\OrderDetail\\ImageView\\index.js":"38","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\AwesomeForm\\index.js":"39","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\Modal\\index.js":"40","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\Plugins\\LinkCards\\index.js":"41","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\Plugins\\CollapseTab\\index.js":"42","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\CardModal\\index.js":"43","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\HozBox\\index.js":"44","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\CheckOut\\ItemsSummary\\index.js":"45","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\CheckOut\\ShippingInfo\\index.js":"46","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\CheckOut\\Payment\\index.js":"47","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\CheckOut\\PriceTotal\\index.js":"48","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\model\\BannerList.js":"49","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\OrderWidget\\index.js":"50","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Home\\Banner\\BannerBox\\index.js":"51","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Home\\Banner\\Controller\\index.js":"52","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Home\\Banner\\Pagination\\index.js":"53","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Pagination\\index.js":"54","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\Plugins\\LinkCards\\LinkCard\\index.js":"55","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\Collaspable\\index.js":"56","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Home\\Banner\\BannerItem\\index.js":"57","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Pagination\\PaginationView\\index.js":"58","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Pagination\\PaginationController\\index.js":"59","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\CustomerService\\index.js":"60","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\Constants\\ServicesItems.js":"61","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\FlexLinks\\index.js":"62","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\FlexLinks\\FlexLink\\index.js":"63","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\ProtectedRoute\\index.js":"64","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\CustomerService\\Help\\index.js":"65","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\CollapseTab\\index.js":"66","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Footer\\index.js":"67","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\ContactUs\\index.js":"68","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\Constants\\EmailJSInfo.js":"69","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\ContactUs\\EmailForm\\index.js":"70","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\ContactUs\\ContactInfo\\index.js":"71","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\ContactUs\\ContactInfo\\ContactBox\\index.js":"72","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\ContactUs\\ContactInfo\\MapLocation\\index.js":"73","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\ContactUs\\ContactInfo\\MapLocation\\Marker\\index.js":"74","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\KartDetail\\SadBag\\index.js":"75","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\PlaceOrder\\YourShipping\\index.js":"76","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\PlaceOrder\\YourTotal\\index.js":"77","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\PlaceOrder\\YourPayment\\index.js":"78","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\PlaceOrder\\YourOrder\\index.js":"79","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\DisplayPanel\\index.js":"80","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\OptionPanel\\index.js":"81","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\CustomSelect\\index.js":"82","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\CoolTable\\index.js":"83","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\CoolTable\\TableTitle\\index.js":"84","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\CoolTable\\TableRow\\index.js":"85","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\Orders\\NoOrder\\index.js":"86"},{"size":582,"mtime":1613775252117,"results":"87","hashOfConfig":"88"},{"size":362,"mtime":499162500000,"results":"89","hashOfConfig":"88"},{"size":15392,"mtime":1627606436465,"results":"90","hashOfConfig":"88"},{"size":492,"mtime":1622586504374,"results":"91","hashOfConfig":"88"},{"size":129,"mtime":1613774255334,"results":"92","hashOfConfig":"88"},{"size":4733,"mtime":1611352936106,"results":"93","hashOfConfig":"88"},{"size":973,"mtime":1611180209883,"results":"94","hashOfConfig":"88"},{"size":562,"mtime":1611196139710,"results":"95","hashOfConfig":"88"},{"size":499,"mtime":1611180209881,"results":"96","hashOfConfig":"88"},{"size":743,"mtime":1610666505233,"results":"97","hashOfConfig":"88"},{"size":1804,"mtime":1625017094315,"results":"98","hashOfConfig":"88"},{"size":4795,"mtime":1622513991759,"results":"99","hashOfConfig":"88"},{"size":3608,"mtime":1623283999054,"results":"100","hashOfConfig":"88"},{"size":1015,"mtime":1619836785298,"results":"101","hashOfConfig":"88"},{"size":1655,"mtime":1626299492052,"results":"102","hashOfConfig":"88"},{"size":1293,"mtime":1625276526197,"results":"103","hashOfConfig":"88"},{"size":2521,"mtime":1625267900050,"results":"104","hashOfConfig":"88"},{"size":1873,"mtime":1626145591173,"results":"105","hashOfConfig":"88"},{"size":14384,"mtime":1627605337434,"results":"106","hashOfConfig":"88"},{"size":13955,"mtime":1627605326873,"results":"107","hashOfConfig":"88"},{"size":532,"mtime":1619834157327,"results":"108","hashOfConfig":"88"},{"size":3464,"mtime":1627612337532,"results":"109","hashOfConfig":"88"},{"size":5745,"mtime":1620449219139,"results":"110","hashOfConfig":"88"},{"size":111,"mtime":1613774165148,"results":"111","hashOfConfig":"88"},{"size":511,"mtime":1613773946849,"results":"112","hashOfConfig":"88"},{"size":5152,"mtime":1622068307292,"results":"113","hashOfConfig":"88"},{"size":5182,"mtime":1626311537498,"results":"114","hashOfConfig":"88"},{"size":278,"mtime":1613782375023,"results":"115","hashOfConfig":"88"},{"size":12863,"mtime":1623283071093,"results":"116","hashOfConfig":"88"},{"size":1051,"mtime":1610758266626,"results":"117","hashOfConfig":"88"},{"size":418,"mtime":1619221715855,"results":"118","hashOfConfig":"88"},{"size":1217,"mtime":1622775532440,"results":"119","hashOfConfig":"88"},{"size":10383,"mtime":1622252116680,"results":"120","hashOfConfig":"88"},{"size":230,"mtime":1609546100947,"results":"121","hashOfConfig":"88"},{"size":4312,"mtime":1625188418863,"results":"122","hashOfConfig":"88"},{"size":913,"mtime":1610755321375,"results":"123","hashOfConfig":"88"},{"size":3092,"mtime":1625017494084,"results":"124","hashOfConfig":"88"},{"size":414,"mtime":1610158351321,"results":"125","hashOfConfig":"88"},{"size":364,"mtime":1626904228627,"results":"126","hashOfConfig":"88"},{"size":1867,"mtime":1627598545901,"results":"127","hashOfConfig":"88"},{"size":467,"mtime":1617239722038,"results":"128","hashOfConfig":"88"},{"size":1445,"mtime":1627602586583,"results":"129","hashOfConfig":"88"},{"size":487,"mtime":1613168144605,"results":"130","hashOfConfig":"88"},{"size":921,"mtime":1613177174547,"results":"131","hashOfConfig":"88"},{"size":1417,"mtime":1624496877035,"results":"132","hashOfConfig":"88"},{"size":9068,"mtime":1624504527805,"results":"133","hashOfConfig":"88"},{"size":14903,"mtime":1626215326849,"results":"134","hashOfConfig":"88"},{"size":3156,"mtime":1626310777261,"results":"135","hashOfConfig":"88"},{"size":930,"mtime":1609550482256,"results":"136","hashOfConfig":"88"},{"size":1548,"mtime":1611269600547,"results":"137","hashOfConfig":"88"},{"size":1196,"mtime":1609550531186,"results":"138","hashOfConfig":"88"},{"size":532,"mtime":1620425438686,"results":"139","hashOfConfig":"88"},{"size":973,"mtime":1609459932185,"results":"140","hashOfConfig":"88"},{"size":2989,"mtime":1617239041865,"results":"141","hashOfConfig":"88"},{"size":292,"mtime":1613786127304,"results":"142","hashOfConfig":"88"},{"size":1919,"mtime":1626479732881,"results":"143","hashOfConfig":"88"},{"size":1215,"mtime":1609550537263,"results":"144","hashOfConfig":"88"},{"size":678,"mtime":1617229149815,"results":"145","hashOfConfig":"88"},{"size":2132,"mtime":1617238915994,"results":"146","hashOfConfig":"88"},{"size":1334,"mtime":1622164141103,"results":"147","hashOfConfig":"88"},{"size":531,"mtime":1622165830241,"results":"148","hashOfConfig":"88"},{"size":576,"mtime":1622157702210,"results":"149","hashOfConfig":"88"},{"size":348,"mtime":1622157581270,"results":"150","hashOfConfig":"88"},{"size":500,"mtime":1622164295416,"results":"151","hashOfConfig":"88"},{"size":3120,"mtime":1622518739274,"results":"152","hashOfConfig":"88"},{"size":2066,"mtime":1622176890950,"results":"153","hashOfConfig":"88"},{"size":1989,"mtime":1622507941575,"results":"154","hashOfConfig":"88"},{"size":710,"mtime":1622686246549,"results":"155","hashOfConfig":"88"},{"size":118,"mtime":1622591869855,"results":"156","hashOfConfig":"88"},{"size":6151,"mtime":1622610619716,"results":"157","hashOfConfig":"88"},{"size":376,"mtime":1622760703292,"results":"158","hashOfConfig":"88"},{"size":1744,"mtime":1622761929956,"results":"159","hashOfConfig":"88"},{"size":1016,"mtime":1622767627965,"results":"160","hashOfConfig":"88"},{"size":657,"mtime":1626990530245,"results":"161","hashOfConfig":"88"},{"size":1852,"mtime":1625266990975,"results":"162","hashOfConfig":"88"},{"size":548,"mtime":1626136420194,"results":"163","hashOfConfig":"88"},{"size":342,"mtime":1626136633148,"results":"164","hashOfConfig":"88"},{"size":590,"mtime":1626136289250,"results":"165","hashOfConfig":"88"},{"size":853,"mtime":1625273827044,"results":"166","hashOfConfig":"88"},{"size":29840,"mtime":1627611481482,"results":"167","hashOfConfig":"88"},{"size":898,"mtime":1626222516094,"results":"168","hashOfConfig":"88"},{"size":2944,"mtime":1626990438970,"results":"169","hashOfConfig":"88"},{"size":1533,"mtime":1627088736986,"results":"170","hashOfConfig":"88"},{"size":376,"mtime":1627084838283,"results":"171","hashOfConfig":"88"},{"size":223,"mtime":1627081471751,"results":"172","hashOfConfig":"88"},{"size":1512,"mtime":1627611785932,"results":"173","hashOfConfig":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},"178c7ws",{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"176"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"176"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"176"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"176"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"176"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"176"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"176"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"176"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"176"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"176"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"176"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"176"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"176"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"176"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"176"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"176"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"176"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"176"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"176"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"176"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"176"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"176"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"176"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"176"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"176"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"176"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"176"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"176"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"176"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"176"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"176"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"176"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"176"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"176"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"176"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"176"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\index.js",[],["385","386"],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\reportWebVitals.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\App\\index.js",["387","388","389","390","391","392","393"],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\Constants\\Routes.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Firebase\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\SearchBar\\index.js",["394","395","396","397"],"import React from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport * as ROUTES from '../../Constants/Routes';\r\nimport './search-bar.scss';\r\nimport ORDERS from '../../model/Orders';\r\nimport {BsSearch} from 'react-icons/bs';\r\nimport { BiBody } from 'react-icons/bi';\r\nclass SearchBar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.refSearch = React.createRef();\r\n        this.state = {\r\n            searchQueue: '',\r\n            valid: false,\r\n            hintList: [],\r\n            fullList: [],\r\n            focused: false,\r\n            mouseOvered: false,\r\n        }\r\n        this.handleOnChange = this.handleOnChange.bind(this);\r\n        this.emptyField = this.emptyField.bind(this);\r\n        this.handleOnFocus = this.handleOnFocus.bind(this);\r\n        this.handleOnFocusOut = this.handleOnFocusOut.bind(this);\r\n        this.handleSearchClick = this.handleSearchClick.bind(this);\r\n        this.handleMouseOver = this.handleMouseOver.bind(this);\r\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\r\n    }\r\n    fetchItems = () => {//get list of items here\r\n        /* fetch(\"ORDERS.json\").then( res => res.text() ).then((res)=>{\r\n            var res = JSON.parse(res);\r\n            let newList = res.map((item) => {//only take their names\r\n                return item.name.toLowerCase();\r\n            })\r\n            this.setState({\r\n                fullList: newList\r\n            })\r\n        }); */ // somehow json error input keeps on popping up, might check to solve this later\r\n        \r\n        //Using direct ORDERS FROM models\r\n        let newList = ORDERS.map((item) => {//only take their names\r\n            return item.name.toLowerCase();\r\n        })\r\n        this.setState({\r\n            fullList: newList\r\n        })\r\n    }\r\n    handleOnChange(event){\r\n        this.setState(()=>({\r\n            searchQueue: event.target.value\r\n        }))\r\n        this.hintSearchName(event.target.value);\r\n    }\r\n    handleOnFocus(){\r\n        this.setState(()=>({\r\n            focused: true\r\n        }))\r\n    }\r\n    handleOnFocusOut(){\r\n        if(!this.state.mouseOvered){\r\n            this.setState(()=>({\r\n                focused: false \r\n              }))\r\n        }  \r\n    }\r\n    handleSearchClick(item){\r\n        \r\n        var promises = new Promise((resolve) => {\r\n            this.setState({\r\n            searchQueue: item})\r\n            resolve();//gotta put this here for resolve result else put refuse if no working, can obmit the refuse\r\n        }\r\n        );\r\n        promises.then(()=>{ //to make sure that the state is updated before trigger click\r\n            this.refSearch.current.click();\r\n        })\r\n    }\r\n    handleMouseOver(){\r\n        this.setState({\r\n            mouseOvered: true,\r\n        })\r\n    }\r\n    handleMouseLeave(){\r\n        this.setState({\r\n            mouseOvered: false,\r\n        })\r\n    }\r\n    hintSearchName(key){\r\n        let hints = [];\r\n        this.state.hintList = [];\r\n        this.state.fullList.forEach((iName)=>{\r\n            if(iName.search(key) >= 0){\r\n                hints.push(iName);\r\n            }\r\n        })\r\n        this.state.hintList = [...new Set(hints)];//ultilzing Set that consist of unique items, then tranform the set back to js array\r\n    }\r\n    emptyField = () => {\r\n        let search_bar_ele = document.getElementById(\"search_bar\");\r\n        let inputSearchField = search_bar_ele.children[0];\r\n        this.setState(()=>({\r\n            searchQueue: inputSearchField.value\r\n        }));\r\n        inputSearchField.value = \"\";\r\n    }\r\n    componentDidMount = () => {\r\n        if(this.state.fullList.length === 0 ){\r\n            this.fetchItems();\r\n        }\r\n    }\r\n    render() {\r\n        return(\r\n            <div onBlur={this.handleOnFocusOut} id=\"search_bar\">\r\n                <input type=\"text\" value={this.state.searchQueue} onFocus={this.handleOnFocus} onChange={this.handleOnChange}></input>\r\n                <Link ref={ this.refSearch} alt=\"Search\" to={ROUTES.SEARCH_RESULT + \"/\" + this.state.searchQueue} onClick={this.emptyField}><BsSearch></BsSearch></Link>\r\n                {this.state.hintList.length > 0 && this.state.focused && <div onMouseEnter={this.handleMouseOver} onMouseLeave={this.handleMouseLeave} className=\"hints\" >\r\n                    { this.state.hintList.map(item => {\r\n                        return(\r\n                            <span key={item} onClick={(e)=>{\r\n                                e.stopPropagation();\r\n                                this.handleSearchClick(item)}} className=\"hint-item\">{item}</span>\r\n                        )\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Navigator\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Home\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Logo\\index.js",[],["398","399"],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\NavBar\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\SearchResult\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\ShoppingCart\\index.js",["400","401","402"],"import {React, useState, useEffect} from 'react';\r\nimport {BiX} from 'react-icons/bi';\r\nimport {BsFillBagFill, BsArrowRightShort} from 'react-icons/bs';\r\nimport {VscClose} from 'react-icons/vsc';\r\nimport {Link} from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport './shopping-cart.scss';\r\nconst ShoppingCart = (props) => {\r\n    const [list,setList] = useState(props.cartList);\r\n    let [,setState] = useState();\r\n    let JQueryCode = () => {\r\n        let $closeBtn = $('.close-btn');\r\n        let $shoppingCartMini = $('#shopping_cart_mini');\r\n        let $shoppingCartContainer = $('#shopping_cart_container');\r\n        let $shoppingCartContainerWidth = $shoppingCartContainer.outerWidth(true);\r\n        let $shoppingCartContainerOffSet = $shoppingCartContainer.offset().left;\r\n        let $window = $(window);\r\n        $closeBtn.on(\"click\", (e) => {\r\n            e.stopPropagation();\r\n            $shoppingCartContainer.animate({left: $shoppingCartContainerOffSet += (($shoppingCartContainerWidth*105)/100)}\r\n            ,200\r\n            ,\"swing\"\r\n            ,()=>{\r\n                $shoppingCartMini.show();\r\n                $shoppingCartContainer.removeAttr(\"style\");\r\n            });\r\n        });\r\n        $(document).on(\"click\", (e) => {\r\n            let $cartLeftOffset = $shoppingCartContainer.offset().left;\r\n            let documentCurWidth = document.body.clientWidth;  \r\n            if (!$(e.target).closest(\"#shopping_cart_container\").length && documentCurWidth - $cartLeftOffset >= 0){\r\n                e.stopPropagation();\r\n                $shoppingCartContainer.animate({left: $shoppingCartContainerOffSet += (($shoppingCartContainerWidth*105)/100)}\r\n                ,200\r\n                ,\"swing\"\r\n                ,()=>{\r\n                    $shoppingCartMini.show();\r\n                    $shoppingCartContainer.removeAttr(\"style\");\r\n                });\r\n            } \r\n        })\r\n        $shoppingCartMini.on(\"click\", (e) => {\r\n            e.stopPropagation();\r\n            $shoppingCartContainer.animate({left: $shoppingCartContainerOffSet -= (($shoppingCartContainerWidth*105)/100)},200);\r\n            $shoppingCartMini.hide();\r\n        });\r\n        $window.on(\"resize\",function(){\r\n            $shoppingCartContainerWidth = $shoppingCartContainer.outerWidth(true);\r\n            $shoppingCartContainerOffSet = $shoppingCartContainer.position().left;\r\n            if(!$shoppingCartMini.is(\":visible\")){\r\n                $shoppingCartContainer.removeAttr(\"style\");\r\n                $shoppingCartContainer.css({\r\n                    \"right\": \"0\" \r\n                 });\r\n            };\r\n        })\r\n    }\r\n    let getTotalQuantity = () => {\r\n        var quantity = 0;\r\n        list.forEach((item) => {\r\n            quantity += parseInt(item.quantity);\r\n        })\r\n        return quantity\r\n    }\r\n    useEffect(()=>{\r\n        JQueryCode();\r\n    },[])\r\n    useEffect(()=>{\r\n        setList(props.cartList);\r\n    },[props.cartList]);\r\n    return (\r\n        <div id=\"shopping_cart_container\">\r\n             <div id=\"shopping_cart_mini\">\r\n                <BsFillBagFill></BsFillBagFill>\r\n                <span className=\"item-no-mini-cart\">{getTotalQuantity()}</span>        \r\n             </div>\r\n             <div className=\"close-btn\">\r\n                <BsArrowRightShort></BsArrowRightShort>\r\n            </div>\r\n            <div id=\"shopping_cart\">\r\n                { list.length > 0? (\r\n                <table key={props.cartList}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {list.map((item,index) => {\r\n                        return(\r\n                        <tr key={index}>\r\n                            <td><img className=\"kart-item-img\" src={require(\"./../../images/\" + item.id + \"-\" + item.type + \".jpg\")}></img></td>\r\n                            <td>{item.type + \" \" + item.name}</td>\r\n                            <td>{item.quantity}</td>\r\n                            <td><button className=\"kart-remove-item-btn\" alt=\"remove item\" onClick={()=>{\r\n                                props.removeItem(index)                               \r\n                            }}><VscClose></VscClose></button></td>\r\n                        </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n                ) : \"No item\" }\r\n            </div>\r\n            {(list.length>0) && <Link className=\"cart-check-out-btn btn\" to=\"/checkout\" onClick={()=>{}}>Check out</Link>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShoppingCart;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\OrderDetail\\index.js",["403","404"],"import {React, useEffect, useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport ImageView from './ImageView';\r\nimport ItemDetail from './ItemDetail';\r\nimport OrderTypeRadio from './OrderTypesRadio/OrderTypeRadio';\r\nimport ORDERS from '../../model/Orders';\r\nimport './order-detail.scss';\r\nconst OrderDetail = (props) => {\r\n    const history = useHistory();\r\n    let idFromParams = props.match.params.id - 1;\r\n    let theOrder = ORDERS[idFromParams];\r\n    let getImgSrcFromType = (type) =>{\r\n        return order.id + \"-\" + type + \".jpg\";\r\n    }\r\n    const [order, setOrder] = useState(theOrder);\r\n    const [curType, setCurType] = useState(order.types[0]);\r\n    const [curImg, setCurImg] = useState(getImgSrcFromType(order.types[0]));\r\n    let [quantityInput,setQuantityInput] = useState(1);\r\n    //handler to send to order type radio so that it can update the current type for order detail component\r\n    let upDateCurType = (daType) =>{\r\n        setCurType(daType);\r\n    }\r\n    //update Quanity Input to add to cart\r\n    let handleQuantityInput = (e) =>{\r\n        setQuantityInput(parseInt(e.target.value));\r\n    }\r\n    //reset quantity when switch between types\r\n    let resetQInput = () => {\r\n        setQuantityInput(1);\r\n    }\r\n    //Add Item to cart then trigger route change to check out\r\n    let handleBuyNow = (obj) => {\r\n       var promise = new Promise(resolve => {\r\n        props.addItem(obj);\r\n        resolve();\r\n       }) \r\n        promise.then(()=>{\r\n            history.push(\"/checkout\");\r\n        })\r\n    }\r\n    //watch for curtype change then update img src \r\n    useEffect(()=>{\r\n        setCurImg(getImgSrcFromType(curType));\r\n    }, [curType]);\r\n    \r\n    if (order == null){\r\n        return \"Loading....\";\r\n    }\r\n    return (\r\n        <div id=\"order_detail\">\r\n            <ImageView key={curImg} imgSrc={curImg} imgName={curType + \" \" + order.name.toLowerCase()} ></ImageView>\r\n            <div className=\"detail-container\">\r\n                <ItemDetail daOrder={order}></ItemDetail>\r\n                <OrderTypeRadio resetQInput={resetQInput} upDateCurType={upDateCurType} types={order.types}></OrderTypeRadio>\r\n                <span className=\"quantity-selector-group\">\r\n                    <label htmlFor=\"quantity\">Quantity</label>\r\n                    <input type=\"number\" value={quantityInput} min={1} max={order.quantity} onChange={handleQuantityInput}></input>\r\n                </span>\r\n                <div className=\"payment-proceed-btn-group\">\r\n                    <button onClick={()=>{\r\n                        props.addItem({\r\n                            name: order.name,\r\n                            quantity: parseInt(quantityInput),\r\n                            id: order.id,\r\n                            price: order.price,\r\n                            type: curType,\r\n                        })\r\n                        props.reRendering();\r\n                    }} disabled={order.quantity <= 0}>Add to Cart</button>\r\n                    <button className=\"buy-now-order-detail-btn\" onClick={()=> {\r\n                        handleBuyNow({\r\n                            name: order.name,\r\n                            quantity: parseInt(quantityInput),\r\n                            id: order.id,\r\n                            price: order.price,\r\n                            type: curType,\r\n                        })}\r\n                        } disabled={order.quantity <= 0}>\r\n                        Buy Now\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderDetail;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\Shortcut\\index.js",["405"],"import React, {useEffect} from 'react';\r\nimport {IoIosArrowDropdownCircle} from \"react-icons/io\";\r\nimport {Link} from 'react-router-dom';\r\nimport './shortcut.scss';\r\nconst Shortcut = (props) => {\r\n    return (\r\n        <div className=\"account-shortcut\">\r\n            <div className=\"mini-information\">\r\n                <span className=\"hello-user\">Hello {props.username}</span>\r\n                <span className=\"more-detail-btn\"><IoIosArrowDropdownCircle></IoIosArrowDropdownCircle></span>\r\n            </div>\r\n            <div className=\"dropdown-account-nav\" id=\"drop-down-account-detail\">\r\n                <ul>\r\n                    <li><Link to=\"/account\">Account info</Link></li>\r\n                    <li><Link to=\"/account/orders\">Your Orders</Link></li>\r\n                    <li><Link to=\"/account/cards\">Your Payment</Link></li>\r\n                    <li><Link to=\"/account/gcards\">Your Gift Cards</Link></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Shortcut;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\index.js",["406","407"],"import React ,{useEffect, useState, useRef} from 'react';\r\nimport './account.scss';\r\nimport Firebase from './../Firebase';\r\n\r\nimport DisplayPanel from './DisplayPanel';\r\nimport OptionPanel from './OptionPanel';\r\nconst Account = (props) => {\r\n    const db = Firebase.firestore();\r\n    const [optionItems, setOptionItems] = useState();\r\n    const [currentOption, setCurrentOption] = useState();\r\n    let getOptionItems = () =>{\r\n        db.collection(\"account-side-panel\").get().then((response)=>{\r\n            let daList = [];\r\n            response.forEach((doc)=>{\r\n                daList.push(doc.data());\r\n            });\r\n            setOptionItems(daList);\r\n            setCurrentOption(daList[0].name);\r\n        })\r\n    }\r\n    let setCurrentOptionForAccount = (option) =>{\r\n        setCurrentOption(option);\r\n    }\r\n    useEffect(() => {\r\n        getOptionItems();\r\n        if(optionItems && currentOption === undefined){\r\n            setCurrentOption(optionItems[0].name);\r\n        }\r\n    }, []);\r\n/*     useEffect(() => {\r\n        if(retrievedItemFromFirestore.length !== 0){\r\n            setOptionItems(retrievedItemFromFirestore);\r\n        }\r\n    }, [retrievedItemFromFirestore]); */\r\n    return (\r\n        <div className=\"account\">\r\n            <h4>Account Information</h4>\r\n           {optionItems ? <OptionPanel setCurrent={setCurrentOptionForAccount} list={optionItems} current={currentOption}></OptionPanel> : \"\"}\r\n            {currentOption && <DisplayPanel reFetch={props.refetchAccount} account = {props.account} current={currentOption}>\r\n\r\n            </DisplayPanel>}\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Account;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\PlaceOrder\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\KartDetail\\index.js",["408","409"],"import {React, useEffect, useState} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport ORDERS from '../../model/Orders';\r\nimport SadBag from './SadBag';\r\nimport './kart-detail.scss';\r\nconst KartDetail = (props) => {\r\n    const [list,setList] = useState(props.list);\r\n    const [,setState] = useState();\r\n    const history = useHistory();\r\n    let handleQuantityChange = (e, index) => {\r\n        let val = parseInt(e.target.value);\r\n        props.changeQuantity(index, val);\r\n        props.rerenderer();\r\n    } \r\n    useEffect(() => {\r\n        setList(props.list);\r\n    }, [props.list]);\r\n    useEffect(()=>{\r\n    \r\n    }, [list])\r\n    return (\r\n        <div id=\"kart_detail\">\r\n            <h4>Kart Detail</h4>\r\n            {list.length > 0 ? (\r\n                <table>\r\n                    <tr>\r\n                        <th width=\"10%\"></th>\r\n                        <th width=\"40%\">Name</th>\r\n                        <th width=\"5%\">Quantity</th>\r\n                        <th width=\"15%\">Price Ea</th>\r\n                        <th width=\"15%\">Total</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    {list.map((item,index)=>{\r\n                        return(\r\n                        <tr key={index}>\r\n                            <td><img src={require(\"./../../images/\" + item.id + \"-\" +item.type+ \".jpg\")}></img></td>\r\n                            <td>{item.type + \" \" + item.name}</td>\r\n                            <td><input max={ORDERS[item.id-1].quantity}  type=\"number\" value={item.quantity} onChange={ (e) => {handleQuantityChange(e,index)}}\r\n                            ></input></td>\r\n                            <td>$ {item.price}</td>\r\n                            <td>$ {item.price * item.quantity}</td>\r\n                            <td><button className=\"remove-item-btn\" onClick={()=>{\r\n                                props.removeItem(index);\r\n                            }}>Delete</button></td>\r\n                        </tr>)\r\n                    })}\r\n                </table>\r\n            ) : <div className=\"empty-kart-detail\">\r\n                <SadBag></SadBag>\r\n                What an empty bag\r\n                <button className=\"continue-shopping-btn\" onClick={(e)=>{\r\n                    history.push(\"\");\r\n                }}>Continue Shopping</button>\r\n                </div>}\r\n            {list.length > 0 && <Link className=\"check-out-btn btn\" to=\"/checkout\">Check out</Link>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default KartDetail;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\ThankYou\\index.js",["410","411"],"import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {GiPartyPopper} from 'react-icons/gi';\r\nimport \"./thank-you.scss\";\r\nclass ThankYou extends Component {\r\n    constructor(props){\r\n     super(props);\r\n     this.state = {\r\n         randomizedOrderTracking: \"\",\r\n     }       \r\n    }\r\n    generateRanDomMaxChar = (max) =>{\r\n        const maxChar = max;\r\n        let charList=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','0','1','2','3','4','5','6','7','8','9'];\r\n        let charListLength = charList.length;\r\n        let listOfChar = [];\r\n        let i = 0;\r\n        for (i; i<maxChar; i+=1){\r\n            let randomNo = Math.floor(Math.random()*charListLength);\r\n            listOfChar.push(charList[randomNo]);\r\n        }\r\n        return listOfChar.toString().replaceAll(',',\"\").toUpperCase();\r\n    }\r\n    componentDidMount = () => {\r\n       this.state.randomizedOrderTracking  = this.generateRanDomMaxChar(15);   \r\n       let promise = new Promise((resolve)=>{\r\n        if(this.props.account){\r\n            this.props.addToOrderAfterCheckOut(this.state.randomizedOrderTracking);\r\n        }\r\n        resolve();\r\n        }).then(()=>{\r\n            this.props.flushCart();\r\n       })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"thank_you\">\r\n                <div className=\"thank_you_headline\"><GiPartyPopper></GiPartyPopper><span>Thank You</span><GiPartyPopper></GiPartyPopper></div> \r\n                <div>\r\n                    Here is the tracking number for your Orders: \r\n                    <span className=\"tracking-number\">{this.state.randomizedOrderTracking}</span>\r\n                </div>\r\n                <Link className=\"continue-shop\" to=\"/\">Continue Shopping</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ThankYou;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\Cards\\index.js",["412","413","414"],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\GCards\\index.js",["415","416","417","418","419"],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\SignInUpButtons\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\Orders\\index.js",["420"],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\SignUp\\index.js",["421"],"import React, {useEffect, useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport AwesomeForm from '../../AwesomeForm';\r\nimport Firebase from '../../Firebase';\r\nimport bcrypt from 'bcryptjs';\r\nimport './sign-up.scss';\r\nconst SignUp = () => {\r\n    const [userName, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordMatch, setPasswordMatch] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [nickname, setNickname] = useState(\"\");\r\n    const [validUser, setValidUser] = useState(true);\r\n    const [foundUser, setFoundUser] = useState(false);\r\n    const [validPassword, setValidPassword] = useState(true);\r\n    const [validPasswordLength, setValidPasswordLength] = useState(true);\r\n    const [readyToCreate, setReadyToCreate] = useState(true);\r\n    const db = Firebase.firestore();\r\n    const USER_LENGTH_MINIMUM = 6;\r\n    const PASSWORD_LENGTH_MINUMUM = 8;\r\n    const history = useHistory();\r\n    let handleUserNameChange = (e) =>{\r\n        setUsername(e.target.value);\r\n    }\r\n    let handleCheckUserName = () =>{\r\n        let userFieldValue = userName;\r\n        if(userFieldValue.length < USER_LENGTH_MINIMUM){\r\n            setValidUser(false);\r\n        } else {\r\n            setValidUser(true);\r\n        }\r\n        if (userFieldValue!==\"\"){\r\n            db.collection(\"users\").doc(userFieldValue).get().then((doc)=>{\r\n                if (doc.exists){\r\n                    setFoundUser(true);\r\n                } else {\r\n                    setFoundUser(false);\r\n                }\r\n            })\r\n        }\r\n      \r\n    }\r\n    let hashPasswordForAccount = (pass) =>{\r\n        const salt = bcrypt.genSaltSync(10);\r\n        var dahash = bcrypt.hashSync(pass,salt);\r\n        return dahash;\r\n    }\r\n    let handlePasswordChange = (e) =>{\r\n        setPassword(e.target.value);\r\n    }\r\n    let handlePasswordMatchChange = (e) =>{\r\n        setPasswordMatch(e.target.value);\r\n    }\r\n    let handleMatchingPassword = () =>{\r\n        setValidPassword(password===passwordMatch);\r\n    }\r\n    let handleCheckPasswordLength = () =>{\r\n        setValidPasswordLength(password.length >= PASSWORD_LENGTH_MINUMUM)\r\n    }\r\n    let handleEmailChange = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n    let handleNicknameChange = (e) =>{\r\n        setNickname(e.target.value);\r\n    }\r\n    let handleCreateAccount = () =>{\r\n        if(password === \"\" || userName === \"\"){\r\n            setReadyToCreate(false);\r\n            handleCheckUserName();\r\n            handleCheckPasswordLength();\r\n        } else {\r\n            let validForm = validPassword&&validPasswordLength&&!foundUser&&validUser;\r\n            if(validForm){\r\n                setReadyToCreate(validForm);\r\n                let account = {\r\n                    cards: [],\r\n                    email: email,\r\n                    gcards: [],\r\n                    kart: [],\r\n                    nickname: nickname,\r\n                    orders: [],\r\n                    phone: \"\",\r\n                    shippings: [],\r\n                    tcards: [],\r\n                    username: userName\r\n                }\r\n                let user = {\r\n                    password: hashPasswordForAccount(password),\r\n                    username: userName\r\n                }\r\n                db.collection(\"users\").doc(userName).set(user);\r\n                db.collection(\"accounts\").doc(userName).set(account);\r\n                history.push(\"/sign-in\");\r\n            }\r\n            \r\n        }\r\n    }\r\n    return (\r\n        <div id=\"sign-up\">\r\n            <AwesomeForm title=\"Sign Up\" width=\"fix-width small\">\r\n                <span className=\"aform-field\">\r\n                    <label>User Name</label>\r\n                    <input type=\"text\" name=\"user-name\" value={userName} onBlur={handleCheckUserName} onChange={handleUserNameChange} autoComplete=\"off\"></input>\r\n                    <span className=\"error\" hidden={!foundUser}>This username was used, please try using a different one</span>\r\n                    <span className=\"error\" hidden={validUser}>Username should be at least 6 characters</span>\r\n\r\n                </span>\r\n                <span className=\"aform-field\">\r\n                    <label>Preferred name</label>\r\n                    <input type=\"text\" name=\"nickname\" value={nickname} onChange={handleNicknameChange}></input>\r\n                </span>\r\n                <span className=\"aform-field\">\r\n                    <label>Your Password</label>\r\n                    <input type=\"password\" name=\"password\" value={password} onBlur={handleCheckPasswordLength} onChange={handlePasswordChange}></input>\r\n                    <span className=\"error\" hidden={validPasswordLength}>password should be at least 8 characters</span>\r\n                </span>\r\n                <span className=\"aform-field\">\r\n                    <label>Re-enter Password</label>\r\n                    <input type=\"password\" name=\"password-match\" onBlur={handleMatchingPassword} value={passwordMatch} onChange={handlePasswordMatchChange}></input>\r\n                    <span className=\"error\" hidden={validPassword}>the password does not match with what you entered</span>\r\n                </span>\r\n                <span className=\"aform-field\">\r\n                    <label>Email</label>\r\n                    <input type=\"email\" name=\"email\" value={email} onChange={handleEmailChange}></input>\r\n                </span>\r\n                <span className=\"error\" hidden={readyToCreate}>Can not create account, please resolve the errors</span>\r\n                <button onClick={handleCreateAccount} className=\"aform-button submit\">Create Account</button>\r\n            </AwesomeForm>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Firebase\\context.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Firebase\\firebase.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\SignIn\\index.js",["422","423","424","425"],"import React, {useEffect, useState} from 'react';\r\nimport {useHistory, Link} from 'react-router-dom';\r\nimport AwesomeForm from '../../AwesomeForm';\r\nimport bcrypt from 'bcryptjs';\r\nimport Firebase from './../../Firebase';\r\nimport './sign-in.scss';\r\nconst SignIn = (props) => {\r\n    const history = useHistory();\r\n    const [passwordField, setPasswordField] = useState(\"\");\r\n    const [usernameField, setUsernameField] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [user, setUser] = useState(\"\");\r\n    const [userFound, setUserFound] = useState(null);\r\n    const [passWordMatch, setPasswordMatch] = useState(null);\r\n    const [readyForPassword, setReadyForPassword] = useState(false);\r\n    const db = Firebase.firestore();\r\n   /*bcrypt.genSalt(10, function(err,salt){\r\n        bcrypt.hash(pass, salt, function(err, hash){\r\n            dahash = hash;\r\n        })\r\n    })*/\r\n    \r\n    let updatePasswordToTestUser = (user) =>{\r\n        const salt = bcrypt.genSaltSync(10);\r\n        var pass = \"292/B22Bui\";\r\n        var dahash = bcrypt.hashSync(pass,salt);\r\n        db.collection(\"users\").doc(user).update({\r\n            password: dahash\r\n        })\r\n    }\r\n    let comparePasswordWithHash = (pass, dahash) => {\r\n        bcrypt.compare(pass, dahash, function(err,res){\r\n            if(res){\r\n                setPasswordMatch(true);\r\n                props.setUserForApp(user);\r\n                history.push(\"\");\r\n            } else {\r\n                setPasswordMatch(false);\r\n                console.log(\"Wrong pass word or ID\")\r\n            }   \r\n        })\r\n    }\r\n    let userInDatabase = (user) => {\r\n        db.collection(\"users\").get().then((res)=>{\r\n                var found = false;\r\n                res.docs.map((doc)=>{\r\n                    if(doc.data().username === user){\r\n                       found = true;\r\n                       setUser(user);\r\n                       setReadyForPassword(true);\r\n                    } \r\n                });\r\n                setUserFound(found);\r\n        })\r\n    }\r\n    let getPasswordFromUser = (user) =>{\r\n        db.collection(\"users\").doc(user).get().then((res)=>{\r\n            setPassword(res.data().password)\r\n        });\r\n    }\r\n    let handlePasswordFieldChange = (e) => {\r\n        setPasswordField(e.target.value);\r\n    }\r\n    let handleUsernameFieldChange = (e) => {\r\n        setUsernameField(e.target.value)\r\n    }\r\n    let handleSignIn = () => {\r\n        if(readyForPassword){\r\n            if (userFound && password !== \"\"){\r\n                setPasswordMatch(comparePasswordWithHash(passwordField, password));\r\n            } else if (userFound){\r\n                getPasswordFromUser(user);\r\n            }\r\n        } else {\r\n            if (user !== usernameField || user !== \"\"){\r\n                userInDatabase(usernameField);\r\n            }\r\n        }\r\n\r\n        /* if(userInDatabase(usernameField)){\r\n            setUserFound(true);\r\n        }else{\r\n            setUserFound(false);\r\n        } */\r\n    }\r\n   /*  useEffect(()=>{\r\n        if(password !== \"\"){\r\n            setPasswordMatch(comparePasswordWithHash(passwordField, password));\r\n        }\r\n    },[password]) */\r\n    useEffect(()=>{\r\n       if(user !== \"\"){\r\n           getPasswordFromUser(user);\r\n       }\r\n    },[userFound])\r\n    useEffect(()=>{})\r\n    return (\r\n        <div className=\"sign-in-aqc\">\r\n                <div className={\"error no-user \" + (userFound === true || userFound ===  null ? \"error-hidden\" : \"\")}>No user found</div>\r\n                <div className={\"error password-unmatch \" + (passWordMatch === true || passWordMatch === null ? \"error-hidden\" : \"\")}>Wrong password</div>\r\n                <AwesomeForm title=\"Sign In\" width=\"fix-width small\"> \r\n                    <span className=\"username aform-field\">\r\n                        <label>\r\n                            User Name\r\n                        </label>\r\n                        <input type=\"text\" name=\"user\" value={usernameField} onChange={handleUsernameFieldChange} autoComplete=\"off\" disabled={readyForPassword}>\r\n\r\n                        </input>\r\n                    </span>\r\n                    <span className={\"user-password aform-field\" + (userFound && readyForPassword? \"\":\" hidden-field\")} >\r\n                        <label>\r\n                            Password\r\n                        </label>\r\n                        <input type=\"password\" name=\"pass\" value={passwordField} onChange={handlePasswordFieldChange} autoComplete=\"off\">\r\n\r\n                        </input>\r\n                    </span>\r\n                    <button className={\"aform-button submit\"} onClick={()=>{\r\n                        history.push(\"/sign-up\");\r\n                    }}>Sign Up</button>\r\n                    <button className={\"aform-button submit\"+ (readyForPassword ? \" \" : \" hidden-btn\")} onClick={()=>{setReadyForPassword(false); setUser(\"\"); setPasswordMatch(true)}}>Change username</button>\r\n                    <button className=\"aform-button submit\" onClick={handleSignIn}>{!readyForPassword ? \"Next\" : \"Sign In\"}</button>\r\n                </AwesomeForm>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignIn;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\CheckOut\\index.js",["426","427","428","429","430","431","432","433"],"import React, {useState,useEffect, useImperativeHandle} from 'react';\r\nimport Payment from './Payment';\r\nimport ItemsSummary from './ItemsSummary';\r\nimport ShippingInfo from './ShippingInfo';\r\nimport PriceTotal from './PriceTotal';\r\nimport firebase from './../Firebase/firebase.js';\r\nimport './check-out.scss';\r\nimport './../AwesomeForm/awesome-form.scss';\r\nimport GIFTCARDS from '../../model/GiftCards';\r\nconst db = firebase.firestore();\r\nconst CheckOut = React.forwardRef((props, ref) => {\r\n    const [dis, setDis] = useState(0);\r\n    const [debitDis, setDebitDis] = useState(0);\r\n    const [card, setCard] = useState(props.curCard);\r\n    const [gcards, setGcards] = useState(props.curGCards);\r\n    const [shipping, setShipping] = useState(props.curShipping);\r\n    const [total, setTotal] = useState();\r\n    const [cards, setCards] = useState();\r\n    const [noOfCards, setNoOfCard] = useState(0);\r\n    let getDis = (percentage = 0) => {\r\n        setDis(percentage)\r\n    }  \r\n    let getDebitDis = (ammount = 0) => {\r\n        setDebitDis(ammount);\r\n    } \r\n    let fetchCardsData = (id) =>{//fetch data from firestore then process it and import it into the cards state of checkout component as well as setting the initial card state\r\n        db.collection(\"cards\").get().then(dat=>{\r\n            var daColection = dat.docs;\r\n            var daList = [];\r\n            var cardsNo = 0;\r\n            daColection.forEach(doc=>{\r\n                cardsNo += 1;\r\n                daList.push(doc.data());\r\n            });\r\n            var promise = new Promise(resolve => {\r\n                //set state at once through props or avail model\r\n                setNoOfCard(cardsNo);\r\n                setCards(daList);\r\n                setCard(daList[id]);\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    let addCardToDb = (obj) => { //add card to the collection\r\n        obj.id =  parseInt(noOfCards).toString();\r\n        if (props.account !== undefined && props.account !== null){\r\n            let accountDoc = db.collection(\"accounts\").doc(props.account.username)\r\n            accountDoc.update({\r\n                cards: firebase.firestore.FieldValue.arrayUnion(obj)\r\n            }).then(()=>{\r\n                setCard(obj);\r\n                setCards(prevState => [...prevState, obj]);\r\n                props.reFetch();\r\n            });\r\n        } else {\r\n            db.collection(\"cards\").doc(obj.id).set(obj).then(()=>{\r\n                //once added, fetch the cards data again and set the current card to newly added card\r\n                    db.collection(\"cards\").doc(obj.id).get().then((data)=>{\r\n                        var newCard = data.data(); //don't forget .data() method to get actual data\r\n                        setCard(newCard);\r\n                        setCards(prevState => [...prevState, newCard]);//add new object to the list\r\n                    });\r\n                }).catch((error)=>{\r\n                    console.error(\"Error writting document: \", error)\r\n                }); \r\n        }\r\n    }\r\n    let setMyCard = (id) => {\r\n        setCard(cards[id]);\r\n    }\r\n    //Get total price info from total price component\r\n    let getTotalFromWithinPriceTotalComp = (num) => {\r\n        setTotal(num);\r\n        props.setTotalForApp(num);\r\n    }\r\n    useEffect(() => {\r\n        //getting data from firestone for the first time\r\n       if(card === undefined){\r\n           //If there is account or signed in\r\n           if(props.account !== undefined && props.account !== null ){\r\n                setCards(props.account.cards);\r\n                setNoOfCard(props.account.cards.length);\r\n                setCard(props.account.cards[0])\r\n           }else {//else use default option\r\n                fetchCardsData(0);\r\n           }\r\n       } else {\r\n            if(props.account !== undefined && props.account !== null){\r\n                setCards(props.account.cards);\r\n                setNoOfCard(props.account.cards.length);\r\n            }else {\r\n                fetchCardsData(card.id);\r\n            }     \r\n       }\r\n    }, []);\r\n    useEffect(()=>{\r\n        props.setCardForApp(card);\r\n    }, [card])\r\n    return (\r\n        <div id=\"check_out\">\r\n            <div className=\"left-container\">\r\n                <ShippingInfo curShipping={shipping} setShippingForApp={props.setShippingForApp}></ShippingInfo>\r\n                {(cards && card) ? <Payment user={props.account ? props.account.username : \"\"}  addCardToDb={addCardToDb} setMyCard={setMyCard} card={card} cards={cards} gcards={props.account ? props.account.gcards : GIFTCARDS} currentGCards={props.curGCards} setGCardForApp={props.setGCardForApp} getDis={getDis} getDebitDis={getDebitDis}></Payment>: <div>No payments available for this account please add via \"Payments\" in account information</div>}\r\n                <ItemsSummary list={props.list}></ItemsSummary> \r\n            </div>\r\n            <div className=\"right-container\">\r\n                <PriceTotal setTotalForCheckOut = {getTotalFromWithinPriceTotalComp} card={props.curCard} dis={dis} debit={debitDis}  list={props.list}></PriceTotal>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n})\r\n\r\nexport default CheckOut;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\Constants\\NavigationItems.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\model\\Orders.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\OrderDetail\\OrderTypesRadio\\OrderTypeRadio.js",["434"],"import {React, useEffect, useState} from 'react';\r\nimport \"./order-type-radio.scss\";\r\nconst OrderTypeRadio = (props) => {\r\n    const [curType, setCurType] = useState('');\r\n    const [types, setTypes] = useState([]);\r\n    useEffect(()=>{\r\n        setTypes(props.types);\r\n        setCurType(props.types[0]);\r\n    },[]);\r\n    \r\n    return (\r\n        <form id=\"type_form\">\r\n            <span className=\"select-type\">Select types:</span>\r\n            { types.map((daType) => {\r\n                return(\r\n                <div className=\"radio-input-container\"  key={daType}>\r\n                    <span className=\"radio-color-type-display\" style={{backgroundColor: daType}}></span>\r\n                    <input onClick={()=>{\r\n                        props.upDateCurType(daType);\r\n                        props.resetQInput();\r\n                    }} type=\"radio\" id={daType} name=\"type\" value={daType} defaultChecked={daType === curType}/>\r\n                </div>\r\n            )\r\n            }) }\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default OrderTypeRadio;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\model\\GiftCards.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Home\\FeaturedItems\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Home\\Banner\\index.js",["435"],"\r\nimport React, { Fragment } from 'react';\r\nimport BannerBox from './BannerBox';\r\nimport Controller from './Controller';\r\nimport BANNERLIST from '../../../model/BannerList';\r\nimport Pagination from './Pagination';\r\nimport './Banner.css';\r\nimport $ from 'jquery';\r\n//Data of Banner items \r\nlet NoOfItems = BANNERLIST.length;\r\nclass Banner extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            bannerWidth: 0,\r\n            bannerBoxWidth: 0,\r\n            bannerItemsNo: NoOfItems,\r\n            current: null,\r\n            next: null,\r\n            prev: null,\r\n            fist: null,\r\n            last: null,\r\n        }\r\n    }\r\n\r\n    JQUERY = () => {\r\n        var that = this;// refer to the instance of the Banner object to use later in the jquery codes\r\n        $(function(){\r\n            var $window = $(window);// window object does not need ''\r\n            var $body = $('body');\r\n            //set bannerWidth for individual width of each banner Item\r\n            let bodyWidth = $body.width();\r\n            let windowHeight = $window.height();\r\n            //set height for banner\r\n            $(\".Banner\").height((windowHeight * 60)/100);\r\n            that.setState({\r\n                bannerWidth: bodyWidth\r\n            })\r\n            //banner Box width is the total width of the containers of all the banner items,\r\n            //this container is hidden by the banner div that only show exactly one banner item at a time \r\n            that.setState({\r\n                bannerBoxWidth: bodyWidth*NoOfItems\r\n            })\r\n            //controllers code\r\n            //Animation handlers\r\n            let $moveRight = () =>{\r\n                $(\".banner-box\").animate({right: \"+=\" + that.state.bannerWidth},500);\r\n            };\r\n            let $moveLeft = () =>{\r\n                $(\".banner-box\").animate({right: \"-=\" + that.state.bannerWidth},500);\r\n            };\r\n            let $moveTo = (id,animated = true)  =>{\r\n                let parsedID = parseInt(id);\r\n                let current = that.getCurrent();\r\n                let currentID = current.index;\r\n                let idDifference = currentID - parsedID;\r\n                //calculating how far the box will be translated\r\n                let moveByTheWidthOf = Math.abs(idDifference) * that.state.bannerWidth;\r\n                //check if the destination is greater than or less comparing to the current id\r\n                //if greater, move to left, else to the right\r\n                if (animated){\r\n                    let $BannerBox = $(\".banner-box\");\r\n                    if(idDifference > 0){\r\n                        $BannerBox.animate({right: \"-=\" + moveByTheWidthOf},500); \r\n                    } else {\r\n                        $BannerBox.animate({right: \"+=\" + moveByTheWidthOf},500)\r\n                    }\r\n                } else {\r\n                    let $BannerBox = $(\".banner-box\");\r\n                    let $BannerBoxRight = parseInt($BannerBox.css(\"right\").replace(\"px\",\"\"));\r\n                    if(idDifference > 0){\r\n                        $BannerBox.css({\r\n                            \"right\": $BannerBoxRight - moveByTheWidthOf + \"px\"\r\n                        })\r\n                    } else {\r\n                        $BannerBox.css({\r\n                            \"right\": $BannerBoxRight + moveByTheWidthOf + \"px\"\r\n                        })\r\n                    }\r\n                }\r\n                \r\n                //Setting state for the banner items, current, prev and next\r\n                that.setCurrent(BANNERLIST[parsedID]);\r\n                if (parsedID === 0){//if the destination is first\r\n                    that.setPrev(that.getLast());\r\n                    that.setNext(BANNERLIST[parsedID + 1]);\r\n                } else if (parsedID === that.state.bannerItemsNo - 1){//if the destination is last\r\n                    that.setPrev(BANNERLIST[parsedID - 1]);\r\n                    that.setNext(that.getFirst());\r\n                } else {//the default ways for prev and next items\r\n                    that.setPrev(BANNERLIST[parsedID - 1]);\r\n                    that.setNext(BANNERLIST[parsedID+ 1]);\r\n                }\r\n                $(\".current\").removeClass(\"current\");\r\n                $(\".Pagination\").find(\"[index='\"+ parsedID + \"']\").addClass(\"current\");\r\n                return;\r\n            };\r\n            //get width when started the app or resizing a window for banner\r\n            $window.on(\"resize\", function(){\r\n                let currentSlide = that.getCurrent();\r\n                let curIndex = currentSlide.index;\r\n                let bodyWidth = $body.width();\r\n                let bannerBoxWidth = bodyWidth*NoOfItems;\r\n                that.setState({\r\n                    bannerWidth: bodyWidth\r\n                })\r\n                that.setState({\r\n                    bannerBoxWidth: bannerBoxWidth\r\n                })\r\n                //Height of Banner\r\n                let windowHeight = $window.height();\r\n                $(\".Banner\").height((windowHeight * 60)/100);\r\n                //return to its last position after reload\r\n                $(\".banner-box\").css({\"right\": curIndex * bodyWidth + \"px\"});\r\n                $(\".current\").removeClass(\"current\");\r\n                $(\".Pagination\").find(\"[index='\"+ curIndex +\"']\").addClass(\"current\");\r\n                \r\n            });\r\n            //Initiallize orders for banner lists \r\n            that.setCurrent(BANNERLIST[0]);\r\n            that.setNext(BANNERLIST[1]);\r\n            that.setPrev(BANNERLIST[that.state.bannerItemsNo - 1]);\r\n            that.setFirst(BANNERLIST[0]);\r\n            that.setLast(BANNERLIST[that.state.bannerItemsNo - 1]);\r\n            //cache of first and last items along with the left and right controllers\r\n            let firstItem = that.getFirst();\r\n            let lastItem = that.getLast();\r\n            let $left = $('.left-controller-banner');\r\n            let $right = $('.right-controller-banner');\r\n            //Left controller codes\r\n            $left.on(\"click\", function(e){\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                let cur = that.getCurrent();\r\n                let prev = that.getPrev();\r\n                let prevIndex = prev.index;\r\n                let newPrevIndex = prevIndex - 1;\r\n                //check if it has to move to the very end of the list\r\n                if(prevIndex === lastItem.index){\r\n                    $moveTo(lastItem.index);\r\n                } else {\r\n                    $moveLeft();\r\n                }\r\n                that.setCurrent(prev);\r\n                that.setNext(cur);\r\n                //Let Pagination components know to move to corresponding dot\r\n                $(\".current\").removeClass(\"current\");\r\n                $(\".Pagination\").find(\"[index='\"+ prev.index + \"']\").addClass(\"current\");\r\n                //check if it has to move to the very front of the list\r\n                if (newPrevIndex < 0) {\r\n                    that.setPrev(lastItem);\r\n                    return;\r\n                } \r\n                that.setPrev(BANNERLIST[newPrevIndex]);\r\n            });\r\n            //Right controller codes\r\n            $right.on(\"click\", function(e){\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                let cur = that.getCurrent();\r\n                let next = that.getNext();\r\n                let nextIndex = next.index;\r\n                let newNextIndex = nextIndex + 1;\r\n                if(nextIndex === firstItem.index){\r\n                    $moveTo(firstItem.index);\r\n                    return;\r\n                } else {\r\n                    $moveRight();\r\n                }\r\n                that.setCurrent(next);\r\n                that.setPrev(cur);\r\n                //Let Pagination components know to move to corresponding dot\r\n                $(\".current\").removeClass(\"current\");\r\n                $(\".Pagination\").find(\"[index='\"+ next.index + \"']\").addClass(\"current\");\r\n                if (newNextIndex > that.state.last.index) {\r\n                    that.setNext(firstItem);      \r\n                    return;\r\n                } \r\n                that.setNext(BANNERLIST[newNextIndex]);\r\n            })\r\n            //Pagination codes\r\n                $(\".page-dot\").first().addClass(\"current\");\r\n                $(\".page-dot\").on(\"click\",function(e){\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    let $this = $(this);\r\n                    $(\".current\").removeClass(\"current\");\r\n                    $this.addClass('current');\r\n                    $moveTo($this.attr(\"index\"));\r\n                });\r\n        })\r\n    }\r\n    componentDidMount = () => {\r\n        this.JQUERY();\r\n    }\r\n    componentWillUnmount() {\r\n        // fix Warning: Can't perform a React state update on an unmounted component\r\n        this.setState = (state,callback)=>{\r\n            return;\r\n        };\r\n    }\r\n    getCurrent = () => {\r\n        return this.state.current;\r\n    }\r\n    getNext = () => {\r\n        return this.state.next;\r\n    }\r\n    getPrev = () => {\r\n        return this.state.prev;\r\n    }\r\n    getNoOfItems = () =>{\r\n        return this.state.bannerItemsNo\r\n    }\r\n    setCurrent = (obj) => {\r\n        this.setState({\r\n            current: obj\r\n        });\r\n    }\r\n    getFirst = () => {\r\n        return this.state.first;\r\n    }\r\n    getLast = () =>{\r\n        return this.state.last;\r\n    }\r\n    setNext = (obj) => {\r\n        this.setState({\r\n            next: obj\r\n        });\r\n    }\r\n    setPrev = (obj) => {\r\n        this.setState({\r\n            prev: obj\r\n        });\r\n    }\r\n    setFirst = (obj) => {\r\n        this.setState({\r\n            first: obj\r\n        })\r\n    }\r\n    setLast = (obj) => {\r\n        this.setState({\r\n            last: obj\r\n        })\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"Banner\">\r\n                <Controller></Controller>\r\n                {/*key is needed for the Banner Box to update the passing props from Banner*/}\r\n                <BannerBox key={this.state.bannerBoxWidth} bannerBoxWidth={this.state.bannerBoxWidth} width={this.state.bannerWidth}></BannerBox>              \r\n                <Pagination NoOfItems={this.getNoOfItems()}></Pagination>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Banner;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\SearchResult\\Sorter\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\SearchResult\\SearchForm\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\OrderDetail\\ItemDetail\\index.js",["436"],"import {React, useState} from 'react';\r\nimport './item-detail.scss';\r\nconst ItemDetail = (props) => {\r\n    const [order,setOrder] = useState(props.daOrder);\r\n    return (\r\n        <div id=\"item_detail\">\r\n            <span className=\"product-name\">{order.name}</span>\r\n            <span className=\"product-price\">Price: $ {order.price}</span>\r\n            <p className=\"product-description\">{order.description}</p>\r\n            <span className=\"product-availability\">\r\n                {order.quantity<=0?(\r\n                    <span className=\"out-of-stock\">Out of stock</span>\r\n                ):(\r\n                    <span>\r\n                        <span className=\"item-in-stock\">In Stock</span>\r\n                        <span className=\"item-quantity\">{order.quantity} left</span>\r\n                    </span>\r\n                )}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ItemDetail;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\SearchResult\\ResultDisplay\\index.js",["437","438"],"import React from 'react';\r\nimport Pagination from './../../Pagination';\r\n\r\nimport './result-display.scss';\r\nclass ResultDisplay extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            searchQueue: {\r\n                name: props.name,\r\n                maxPrice: props.maxPrice,\r\n                minPrice: props.minPrice,\r\n                inStock: props.inStock,\r\n            },\r\n            list: [],\r\n            foundList: []\r\n        }\r\n        this.fetchItems = this.fetchItems.bind(this);\r\n    }\r\n    getItemBasedOnSearchResult(){\r\n        let list = this.state.list;\r\n        let newList = [];\r\n        let result = [];\r\n        let nameResult = this.props.name;\r\n        let maxPriceResult = parseInt(this.props.maxPrice);\r\n        let minPriceResult = parseInt(this.props.minPrice);\r\n        let getInStockResult = this.props.inStock;\r\n        if(getInStockResult){\r\n            list.forEach((item) =>{\r\n                var nameMatchResult = item.name.toLowerCase().search(nameResult);\r\n                if (nameMatchResult != -1 && item.quantity > 0){\r\n                    newList.push(item);\r\n                } \r\n            });\r\n        } else {\r\n            list.forEach((item) =>{\r\n                var nameMatchResult = item.name.toLowerCase().search(nameResult);\r\n                if (nameMatchResult != -1){\r\n                    newList.push(item);\r\n                } \r\n            });\r\n        }\r\n        \r\n        if (maxPriceResult === 0){\r\n           result = newList.filter(item => (parseInt(item.price) >= minPriceResult));\r\n        }else {\r\n           result = newList.filter(item => (parseInt(item.price) >= minPriceResult && parseInt(item.price) <= maxPriceResult));\r\n        }\r\n        return result;\r\n    }\r\n    fetchItems(){\r\n        fetch(\"../ORDERS.json\").then(res => res.json()).then((result)=>{\r\n            this.setState({\r\n                 list: result,\r\n             });\r\n        }).then(()=>{\r\n            this.setState({\r\n               foundList: this.getItemBasedOnSearchResult()\r\n            })\r\n        })\r\n     }\r\n    componentDidMount(){\r\n        this.fetchItems();\r\n    }\r\n    componentDidUpdate(prevProps,prevState){\r\n        if(prevProps.name !== this.props.name \r\n            || prevProps.minPrice !== this.props.minPrice\r\n            || prevProps.maxPrice !== this.props.maxPrice\r\n            || prevProps.inStock !== this.props.inStock\r\n            ){//need to use this to update component when props change, compare the prev props with the current props to stop infinite call of render\r\n            this.setState({\r\n                foundList: this.getItemBasedOnSearchResult()\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"result_display\">\r\n                    <h4>Here is what we found: ({this.state.foundList.length})</h4>\r\n                    { this.state.foundList.length >0 ? (<Pagination  dalist={this.state.foundList}></Pagination>) : ( <div>Not found</div>)}   \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResultDisplay;","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\OrderDetail\\ImageView\\index.js",["439","440","441","442"],"import {React, useState, useEffect} from 'react';\r\nimport './image-view.scss';\r\nconst ImageView = (props) => {\r\n    const [imgSrc, setImgSrc] = useState(props.imgSrc);\r\n    const [imgName, setImgName] = useState(props.imgName);\r\n    return (\r\n        <div id=\"image_view\">\r\n            <img att={imgName} src={require('./../../../images/' + imgSrc)}></img>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageView;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\AwesomeForm\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\Modal\\index.js",["443","444"],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\Plugins\\LinkCards\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\Plugins\\CollapseTab\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\CardModal\\index.js",[],["445","446"],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\HozBox\\index.js",["447"],"import React, { Component } from 'react';\r\nimport \"./hoz-box.scss\";\r\nclass HozBox extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            imgSrc: props.imgSrc,\r\n            title: props.title,\r\n            content: props.content,\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n                <div className=\"hoz-order-box\">\r\n                    <img src={require(\"./../../../images/\" + this.state.imgSrc)}></img>\r\n                    <div className=\"box-content\">\r\n                        <span className=\"order-name\">{this.state.title}</span>\r\n                        <div className=\"order-content\">{this.state.content}</div>\r\n                        {this.props.extraContent &&(\r\n                            this.props.extraContent\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default HozBox;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\CheckOut\\ItemsSummary\\index.js",["448","449"],"import React, {useState, useEffect} from 'react';\r\nimport './items-summary.scss'\r\nconst ItemsSummary = (props) => {\r\n    const [list,setList] = useState(props.list);\r\n    useEffect(()=>{\r\n        setList(props.list);\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        setList(props.list);\r\n    },[props.list])\r\n   \r\n    return (\r\n        <div id=\"items-summary\">\r\n            <h4 className=\"check-out-title\">Items summary</h4>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Name</th>\r\n                        <th>Quantity</th>\r\n                        <th>Total</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {list.length > 0 && list.map((item, index)=>{\r\n                        return(\r\n                            <tr key={item.id + item.type}>\r\n                                <td><img src={require(\"./../../../images/\" +  item.id + \"-\" + item.type + \".jpg\")}></img></td>\r\n                                <td>{item.type + \" \" + item.name}</td>\r\n                                <td>{item.quantity}</td>\r\n                                <td>$ {item.quantity * item.price}</td>\r\n                            </tr>     \r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ItemsSummary;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\CheckOut\\ShippingInfo\\index.js",["450","451"],"import React, {useState, useEffect, useRef} from 'react';\r\nimport './shipping-info.scss';\r\nimport Collapsable from \"../../Plugins/Collaspable\";\r\nimport Modal from \"../../Plugins/Modal\";\r\nimport firebase from '../../Firebase/firebase.js';\r\nconst db = firebase.firestore();\r\nconst ShippingInfo = (props) => {\r\n    //Refs\r\n    const modalRef = useRef();\r\n    //States\r\n    const [shippingList, setShippingList] = useState([]);\r\n    const [currentShipping, setCurrentShipping] = useState(props.curShipping)\r\n    const [allStates, setAllStates] = useState();\r\n    const [shippingFormValues, setShippingFormValues] = useState({\r\n        name:\"\",\r\n        zip: \"\",\r\n        city: \"\",\r\n        resiState: \"\",\r\n        address: \"\",\r\n        id: \"\",\r\n    });\r\n    //Methods\r\n    //data getter from firestore\r\n    let fetchDataFromFireStore = (id) => {\r\n        db.collection(\"shippings\").get().then((dat)=>{\r\n            var collections = dat.docs;\r\n            var list = [];\r\n            var promise = new Promise((resolve)=>{\r\n                collections.forEach((doc)=>{\r\n                    list.push(doc.data())\r\n                });\r\n                resolve();\r\n             });\r\n            promise.then(()=>{\r\n                setShippingList(list);\r\n                if (!id){\r\n                    setCurrentShipping(list[0]);\r\n                } else {\r\n                    setCurrentShipping(list[id]);\r\n                    props.setShippingForApp(list[id]);\r\n                }\r\n            });\r\n        })\r\n    }\r\n    //Forms handlers\r\n        //Handling Forms inputs\r\n    let handleNameChange = (e) => {\r\n        setShippingFormValues(prevState => ({\r\n            ...prevState,\r\n            name: e.target.value\r\n        }))\r\n    }\r\n    let handleZipChange = (e) => {\r\n        setShippingFormValues(prevState => ({\r\n            ...prevState,\r\n            zip: e.target.value\r\n        }))\r\n    }    \r\n    let handleStateChange = (e) => {\r\n        setShippingFormValues(prevState => ({\r\n            ...prevState,\r\n            resiState: e.target.value\r\n        }))\r\n    }\r\n    let handleCityChange = (e) => {\r\n        setShippingFormValues(prevState => ({\r\n            ...prevState,\r\n            city: e.target.value\r\n        }))\r\n    }\r\n    let handleAddressChange = (e) => {\r\n        setShippingFormValues(prevState => ({\r\n            ...prevState,\r\n            address: e.target.value\r\n        }))\r\n    }\r\n    let updateCurrentShipping = (e) =>{\r\n        let id = e.target.value;\r\n        setCurrentShipping(shippingList[id]);\r\n    }\r\n        //Submitting form values\r\n    let setShippingAddress = () => {\r\n        if(shippingFormValues.length === 0 || shippingFormValues === undefined){\r\n            return;\r\n        } else {\r\n            var newShipAddress = {...shippingFormValues};\r\n            var lengthOfList = (shippingList.length).toString();\r\n            newShipAddress.id = lengthOfList;\r\n            db.collection(\"shippings\").doc(lengthOfList).set(newShipAddress).then(()=>{\r\n                fetchDataFromFireStore(newShipAddress.id);\r\n            });\r\n        }\r\n    } \r\n    //When current shipping changed, update shipping info to Check Out component\r\n    useEffect(()=>{\r\n        if(currentShipping !== undefined){\r\n            props.setShippingForApp(currentShipping);\r\n        }\r\n    },[currentShipping])\r\n    //Getting shipping datas from fire store and states data from json file from public directory\r\n    useEffect(() => {\r\n        if (props.curShipping === undefined){\r\n            fetchDataFromFireStore(0);\r\n            fetch(\"USstates.json\").then((dat)=>dat.json()).then(data=>{\r\n                setAllStates(data);\r\n            });\r\n        } else {     \r\n            fetchDataFromFireStore(props.curShipping.id);\r\n            fetch(\"USstates.json\").then((dat)=>dat.json()).then(data=>{\r\n                setAllStates(data);\r\n            });\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"shipping-info\">\r\n                <h4 className=\"check-out-title\">Shipping</h4>\r\n                <Collapsable\r\n                    itemName=\"shipping\"\r\n                   //Top part of the collapsable plugin\r\n                    chosenChildren= {currentShipping && \r\n                        <div className=\"shipping-chosen\">\r\n                            <span className=\"chosen-shipping-name\">{currentShipping.name}</span>\r\n                            <span className=\"chosen-shipping-address-line\">{currentShipping.address}</span>\r\n                            <span className=\"chosen-shipping-city-state\">{currentShipping.city}, {currentShipping.resiState} {currentShipping.zip} </span>\r\n                        </div>\r\n                    }\r\n                    //Bottom part of the collapsable plugin where change field and form present\r\n                    changeChildren={\r\n                        (\r\n                        <div>\r\n                            <div className=\"shipping-options\">\r\n                                <table >\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th></th>\r\n                                            <th>Name</th>\r\n                                            <th>Address</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {shippingList && currentShipping && shippingList.map((ship)=>{\r\n                                        return(\r\n                                       <tr key={ship.id}>\r\n                                           <td><input onClick={updateCurrentShipping} type=\"radio\" name=\"shipping\" checked={currentShipping.id === ship.id} value={ship.id}></input></td>\r\n                                           <td className=\"ship-name\">{ship.name}</td>\r\n                                           <td className=\"ship-address\">{ship.address}</td>\r\n                                       </tr>     \r\n                                        );\r\n                                    })}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <Modal ref={modalRef} extraFuncToCloseMethod name=\"add_shipping\">{/*Provdie name to make unique ID for the modal*/}\r\n                                    <span className=\"aform-field add-shipping-name\">\r\n                                        <label className=\"label\">For (Name):</label>\r\n                                        <input value={shippingFormValues.name} onChange={handleNameChange} type=\"text\" placeholder=\"Enter Name Here\"></input>\r\n                                    </span>\r\n                                    <span className=\"aform-field add-shipping-address\">\r\n                                        <label className=\"label\">Address</label>\r\n                                        <input value={shippingFormValues.address} onChange={handleAddressChange}  type=\"text\" placeholder=\"Enter Address\"></input>\r\n                                    </span>\r\n                                    <span className=\"aform-field add-shipping-state\">\r\n                                        <label className=\"label\">State</label>\r\n                                        <select value={shippingFormValues.resiState} onChange={handleStateChange}>\r\n                                            {allStates && allStates.map((daState)=>{\r\n                                                return(\r\n                                                    <option key={daState.abbreviation} value={daState.abbreviation}>{daState.name}</option>\r\n                                                );\r\n                                            })}\r\n                                        </select>\r\n                                    </span>\r\n                                    <span className=\"aform-field add-shipping-city\">\r\n                                        <label className=\"label\">City</label>\r\n                                        <input value={shippingFormValues.city} onChange={handleCityChange} type=\"text\" placeholder=\"Enter City\"></input>\r\n                                    </span>\r\n                                    <span className=\"aform-field add-shipping-zip\">\r\n                                        <label className=\"label\">Zip</label>\r\n                                        <input value={shippingFormValues.zip} onChange={handleZipChange} type=\"text\" placeholder=\"Enter zip code\"></input>\r\n                                    </span>\r\n                                <button className=\"aform-button submit\" onClick={setShippingAddress}>Add the Address</button>\r\n                            </Modal>\r\n                        </div>\r\n                        )\r\n                    }\r\n                extra={(<button onClick={()=>{modalRef.current.showModal()}}>+ Add new Address</button>)}\r\n                >\r\n                </Collapsable>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShippingInfo;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\CheckOut\\Payment\\index.js",["452","453"],"import React, {useState, useRef} from 'react';\r\nimport GIFTCARDS from '../../../model/GiftCards';\r\nimport Modal from '../../Plugins/Modal';\r\nimport './payment.scss';\r\n\r\nconst Payment = (props) => {\r\n    const [addingCard, setAddingCard] = useState({\r\n        owner: \"\",\r\n        \"card number\": \"\",\r\n        \"exp month\": 0,\r\n        \"exp year\": 0,\r\n        type: \"\",\r\n        id: 0,\r\n        name: \"added from modal\",\r\n        imgSrc: \"kirby.jpg\"    \r\n    });\r\n     //List of random state to generate when add a new card, as if the information is retrieved from the bank the card from\r\n     const randomCities = [\"San jose\", \"San Frans\", \"Sunny vale\"];\r\n     const randomStates = [\"CA\", \"AZ\", \"NY\"];\r\n     const randomZips = [\"97888\",\"99999\",\"11100\"];\r\n     const randomTypes = [\"visa\",\"master\"];\r\n     const INITIALCARDFORM = {//empty object used to initialize form for adding card\r\n         name: \"Newly added\",\r\n         owner: \"\",\r\n         \"card number\": \"\",\r\n         \"exp month\": 0,\r\n         \"exp year\": 0,\r\n         \"billing address\": \"Newly added\" + (Math.round(Math.random()*99)),\r\n         \"billing city\": randomCities[Math.floor(Math.random()*3)],\r\n         \"billing state\": randomStates[Math.floor(Math.random()*3)],\r\n         \"billing zip\": randomZips[Math.floor(Math.random()*3)],\r\n         type: randomTypes[Math.floor(Math.random()*2)],\r\n         id:0,\r\n     }\r\n    const [dagiftCards, setdaGiftCard] = useState(props.currentGCards);\r\n    const [userGcards, setUserGcards] = useState(props.gcards ? props.gcards : GIFTCARDS);\r\n    //ref to modal\r\n    const modalRef = useRef();\r\n    //get current year for min year in card\r\n    let dateobj = new Date();\r\n    let fullYear = dateobj.getFullYear();\r\n\r\n    //When user click change button to change their cards option\r\n    let handleChange = (e) =>{\r\n        e.stopPropagation();\r\n        var changeField = document.getElementById(\"change-card-field\");\r\n        var chosen = document.getElementById(\"chosen-card\");\r\n        changeField.classList.remove(\"display-none\");\r\n        chosen.classList.add(\"display-none\");\r\n    }\r\n    //when use click close button or commit to change to hide the change option tab\r\n    let handleClose = (e) =>{\r\n        e.stopPropagation();\r\n        var changeField = document.getElementById(\"change-card-field\");\r\n        var chosen = document.getElementById(\"chosen-card\");\r\n        chosen.classList.remove(\"display-none\");\r\n        changeField.classList.add(\"display-none\"); \r\n        handleDiscount();\r\n    }\r\n    //get discount information through the states arrays dagiftCards \r\n    //then call its parent method to get discount ammount and/or discount percentage\r\n    let handleDiscount = () => {\r\n        var disObj = {dis: 0, ammt: 0};\r\n        //Check if there is gift card or not, if there is, check if it is a debit or percentage\r\n        //Should change this since it seems imparative\r\n        if(dagiftCards.length === 0 || dagiftCards === undefined){\r\n            props.getDis(disObj.dis);\r\n            props.getDebitDis(disObj.ammt);\r\n            return;\r\n        } else {\r\n            dagiftCards.forEach(card => {\r\n                if(card.type===\"discount\"){\r\n                    disObj.dis +=  parseInt(card.amount);\r\n                } else {\r\n                    disObj.ammt += parseInt(card.amount);\r\n                }\r\n            });\r\n        }\r\n        props.getDis(disObj.dis);\r\n        props.getDebitDis(disObj.ammt);\r\n    }\r\n    //On select, add G card chosen to the state dagiftCards array\r\n    let handleChangeGcard = (id,e) =>{\r\n        var items = [...dagiftCards];    \r\n        var newList;\r\n        if(e.target.checked){//if checked the box, added the item\r\n            items.push(props.gcards[id]);\r\n            setdaGiftCard(items);\r\n            props.setGCardForApp(items);\r\n        } else {// else unchecked, remove the item\r\n            var found = items.findIndex(ele => ele.id === id);\r\n            newList = items.slice(0, found).concat(items.slice(found + 1, items.length))\r\n            setdaGiftCard(newList);\r\n            props.setGCardForApp(newList);\r\n        }       \r\n    }\r\n    //If unchecked the gift card option, remove the card from the dagiftCard state\r\n    let noGiftCard = (e) => {\r\n        var dontUseThem = e.target.checked;\r\n        if(dontUseThem){\r\n            setdaGiftCard([]);\r\n            props.setGCardForApp([]);        \r\n        }\r\n        \r\n    }\r\n    let handleChangeCard = (id) => {\r\n        props.setMyCard(id);\r\n    }\r\n    //Handle add card from modal\r\n    let handleAddCard = () => {\r\n        var thecard = {...addingCard};\r\n        props.addCardToDb(thecard);\r\n        modalRef.current.hideModal();\r\n    }\r\n    //Input state management\r\n    let handleOwnerNameChange = (e) => {\r\n        setAddingCard(prevState => ({\r\n            ...prevState,\r\n            owner: e.target.value\r\n        }))\r\n    }\r\n    let handleCardNumberChange = (e) =>{\r\n        setAddingCard(prevState => ({\r\n            ...prevState,\r\n            \"card number\": e.target.value\r\n        }))\r\n    }\r\n    let handleTypeSelect = (e) => {\r\n        setAddingCard(prevState => ({\r\n            ...prevState,\r\n            type: e.target.value\r\n        }))\r\n    }\r\n    let handleMonthChange = (e) => {\r\n        setAddingCard(prevState => ({\r\n            ...prevState,\r\n            \"exp month\": e.target.value\r\n        }))\r\n    }\r\n    let handleYearChange = (e) => {\r\n        setAddingCard(prevState => ({\r\n            ...prevState,\r\n            \"exp year\": e.target.value\r\n        }))\r\n    }\r\n    //initiate, componentDidMount\r\n    useState(()=>{\r\n        handleDiscount();\r\n    },[]);\r\n\r\n    return (\r\n        <div id=\"payment\">\r\n                <h4 className=\"check-out-title\">Payment</h4>\r\n                {/*default option for cards and gift cards */}\r\n                <div className=\"card-options\">\r\n                    <div id=\"chosen-card\">       {/*chosen card*/}\r\n                             {props.card && <div className=\"card-payment\">\r\n                                 <img className=\"card-img\" alt={props.card.type} src={require(\"../../../images/Cards/\" +  props.card.type + \".jpg\")}></img>\r\n                                <span className=\"card-name\"><b>{props.card.type} </b></span>\r\n                                <span className=\"card-ending\">Ending in {props.card[\"card number\"].slice(12)}</span> \r\n                             </div>}\r\n                             {(dagiftCards.length !== 0) ? \r\n                             <div className=\"giftcard-payment\">{/*chosen gift card(s)*/}\r\n                                {dagiftCards.map(card => {\r\n                                return(\r\n                                <div key={card.id} className=\"chosen-gift-card\">\r\n                                    <img className=\"gcard-img\" alt={card.type} src={require(\"../../../images/Cards/\" + card.type + \".jpg\")}></img>\r\n                                    <span className=\"gcard-name\">{\r\n                                    (card.type === \"debit\"? (\"$ \" + card.amount) : (card.amount + \" %\")) \r\n                                    + \" \" + card.name + \" gift card\"}</span>\r\n                                </div>\r\n                                );\r\n                                \r\n                            })}\r\n                             </div> : <div className=\"no-chosen-gcard\">No gift card chosen, you owned<b>{\" \" + userGcards.length}</b>gift cards </div>}\r\n                             <button  className=\"change-card\" onClick={handleChange}>Change</button>\r\n                    </div>\r\n                   <div id=\"change-card-field\" className=\"display-none\">{/*initially hidden, appear when click change button in #chosen-card*/}\r\n                        <div className=\"card-container-change\">{/*change field for card*/}\r\n                            <h4>Cards for payment</h4>\r\n                            {props.cards.length !== 0? <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th>Card Name</th>\r\n                                        <th>Name of Card</th> \r\n                                        <th>Expires on</th> \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {props.cards  && props.cards.map((card)=>{\r\n                                        return(\r\n                                           <tr key={card[\"id\"]}>\r\n                                               { <td className=\"radio-value\"><input onChange={()=>{handleChangeCard(card[\"id\"])}} defaultChecked={card[\"id\"] === props.card[\"id\"] } type=\"radio\" name=\"card\" value={card[\"id\"]}></input></td>}\r\n                                                <td className=\"card-name\"><b>{card.name} {\" \" + card.type}</b> ending in {card[\"card number\"].slice(12)}</td>\r\n                                                <td className=\"card-owner\">{card.owner.toUpperCase()}</td>\r\n                                                <td className=\"card-exp\">{card[\"exp month\"]}/{card[\"exp year\"]}</td>\r\n                                            </tr>  \r\n                                        );\r\n                                    })}\r\n                                </tbody>\r\n                            </table>: <div className=\"no-card\">No payment option availble please add through \"Payments\" option in accounts information</div>}\r\n                            <button className=\"btn add-card-btn\" onClick={()=>{modalRef.current.showModal()}}>+ Add a new card</button>\r\n                        </div>\r\n                        {userGcards.length > 0 ? \r\n                        <div className=\"gcard-container-change\">{/*change field for  gift card*/}\r\n                            <h4>Gift cards</h4>\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th>Card Name</th>\r\n                                        <th>Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {userGcards.map((card)=>{\r\n                                        return(\r\n                                            <tr key={card.id}>\r\n                                                <td className=\"checkbox-value\"><input onChange={(e)=>{handleChangeGcard(card.id,e)}} checked={dagiftCards.findIndex(dacard => dacard.id === card.id) !== -1}   type=\"checkbox\" name={\"giftcard\" + (parseInt(card.id) + 1)} value={card.id}></input></td>\r\n                                                <td className=\"card-name\">{card.name}  </td>\r\n                                                <td className=\"card-dis\">{card.type === \"debit\" ? \"$ \" + card.amount : card.amount + \" %\"}</td>\r\n                                            </tr>\r\n                                        );\r\n                                        })}\r\n                                    <tr>\r\n                                        <td className=\"checkbox-value\"><input onChange={(e)=>{\r\n                                            noGiftCard(e)}} checked={dagiftCards.length===0}  type=\"checkbox\" name=\"giftCard\"></input></td>\r\n                                        <td className=\"card-name\">I don't use any gift card</td>{/*if user dont want to use any gift card*/}\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        : <div className=\"no-gift-card\">No gift card available</div>}\r\n                        <button className=\"commit-btn\" onClick={handleClose}>Commit change (Close)</button>\r\n                        </div>\r\n                </div>               \r\n                <Modal name=\"adding-card\" ref={modalRef}>{/*hide initially, only show when evoke showModal method of the component Modal through ref*/}\r\n                                    <span className=\"aform-field\">\r\n                                        <label htmlFor=\"card owner\">Full Name</label><br></br>\r\n                                        <input type=\"text\" onChange={handleOwnerNameChange} value={addingCard.owner} placeholder=\" Enter Name on Card\" required></input>\r\n                                    </span>\r\n                                    <span className=\"aform-field\">\r\n                                        <label htmlFor=\"card number\">Card Number</label><br></br>\r\n                                        <input type=\"text\" onChange={handleCardNumberChange} value={addingCard[\"card number\"]} placeholder=\"Enter Card Number\" required></input>\r\n                                    </span>\r\n                                    <span className=\"aform-field\">\r\n                                        <label htmlFor=\"cvs\">CVS</label><br></br>\r\n                                        <input type=\"text\" placeholder=\"Enter CVS\"></input>\r\n                                    </span>\r\n                                    <span className=\"aform-field\">\r\n                                        <label htmlFor=\"type\">Type of cards</label><br></br>\r\n                                        <select required className=\"card-type\" value={addingCard.type} onChange={handleTypeSelect} placeholder=\"Select card type\">\r\n                                            <option value=\"\" disabled >Select card type</option>\r\n                                            <option value=\"debit\">Debit</option>\r\n                                            <option value=\"credit\">Credit</option>\r\n                                            <option value=\"visa\">Visa</option>\r\n                                            <option value=\"master\">Master</option>\r\n                                        </select>\r\n                                    </span>\r\n                                    <span className=\"aform-field exp-date\">\r\n                                        <label htmlFor=\"exp\">Expires on (month/YYYY)</label>\r\n                                        <input required type=\"number\" value={addingCard[\"exp month\"]} onChange={handleMonthChange} className=\"exp-month exp two-digits\" max=\"12\" min=\"1\"></input>\r\n                                        <input required type=\"number\" value={addingCard[\"exp year\"]} onChange={handleYearChange} className=\"exp-year exp four-digits\" min={fullYear}></input>{/*full year got in the begining through date obj*/}\r\n                                    </span>\r\n                                <button className=\"aform-button submit\" onClick={handleAddCard}>Add card</button>\r\n                    </Modal> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Payment;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\CheckOut\\PriceTotal\\index.js",["454","455","456"],"import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './price-total.scss';\r\nconst PriceTotal = (props) => {\r\n    let getSum = () => {\r\n        let initial = 0;\r\n        var sum = list.reduce((prev,current) => {\r\n            return prev + (current.price * current.quantity);\r\n        }, initial);\r\n        return sum;\r\n    }\r\n    const [list,setList] = useState(props.list);\r\n    const [sum, setSum] = useState(getSum());\r\n    const [tax, setTax] = useState(15);\r\n    const [debit, setDebit] = useState(isNaN(props.debit)? 0 : props.debit);\r\n    const [dis, setDis] =  useState(isNaN(props.dis)? 0 : props.dis);\r\n    let getSubTotal = () => {\r\n        var dasum = (sum + ((tax * sum)/100)) - debit - ((dis*sum)/100);\r\n        if (dasum < 0) {\r\n            props.setTotalForCheckOut(0)\r\n            return 0;\r\n        } else {\r\n            props.setTotalForCheckOut(dasum);\r\n            return dasum\r\n        }\r\n    }\r\n    let handleStick = (e) =>{\r\n        let totalPriceComp = document.getElementsByClassName(\"total-price\")[0];\r\n        let compOffsetTop = totalPriceComp.offsetTop;\r\n        if(compOffsetTop < window.pageYOffset){\r\n            totalPriceComp.classList.add(\"sticky\");\r\n        } else {\r\n            totalPriceComp.classList.remove(\"sticky\");\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        setList(props.list);\r\n        setSum(getSum());\r\n        window.addEventListener(\"scroll\", handleStick);\r\n        return () =>{\r\n            window.removeEventListener(\"scroll\",handleStick);\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        setList(props.list);\r\n        setSum(getSum());\r\n        \r\n    },[props.list])\r\n\r\n    useEffect(()=>{\r\n        setDis(parseInt(props.dis));\r\n        setDebit(parseInt(props.debit));\r\n    },[props.dis,props.debit])\r\n    return (\r\n        <div className=\"total-price\" key={props}>\r\n            <h4>Order Summary</h4>\r\n            <span className=\"price-row\">\r\n                <span className=\"item-label\">Before Tax:</span>\r\n                <span className=\"item-value\">$ {sum}</span>    \r\n            </span>\r\n            <span className=\"price-row\">\r\n                <span className=\"item-label\">Tax ({tax}%):</span>\r\n                <span className=\"item-value\">$ {(tax * sum)/100}</span>    \r\n            </span>\r\n            <span className=\"price-row\">\r\n                <span className=\"item-label\">Discount (ammount): </span>\r\n                <span className=\"item-value\">$ {debit}</span>    \r\n            </span>\r\n            <span className=\"price-row\">\r\n                <span className=\"item-label\">Discount ({props.dis}%):</span>\r\n                <span className=\"item-value\">$ {(dis*sum)/100}</span>    \r\n            </span>\r\n            <hr></hr>\r\n            <span className=\"price-row\">\r\n                <span className=\"item-label final\">Total:</span>\r\n                <span className=\"item-value\">$ {getSubTotal()}</span>    \r\n            </span>\r\n            <Link to=\"/place-order\" className={\"order-place-btn btn\" + (props.card !== undefined ? \"\" : \" disabled\")}>Place Orders</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PriceTotal;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\model\\BannerList.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\OrderWidget\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Home\\Banner\\BannerBox\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Home\\Banner\\Controller\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Home\\Banner\\Pagination\\index.js",["457"],"import React from 'react';\r\nimport './Pagination.css';\r\nimport {BsFillCircleFill as Circle} from 'react-icons/bs';\r\nfunction Pagedot(props) {\r\n    return(\r\n        <a href=\"#\" className=\"page-dot\" index={props.index}>\r\n            <Circle></Circle>\r\n        </a>\r\n    )\r\n\r\n};\r\nclass Pagination extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            NoOfItems: this.props.NoOfItems,\r\n            current: 0,\r\n            next: this.props.NoOfItems - 1,\r\n            prev: 0,\r\n        }\r\n    }\r\n    generateUI(){\r\n        var i = 0;\r\n        var max = this.state.NoOfItems;\r\n        var items = [];\r\n        for(i; i < max; i+=1){\r\n            items.push(<Pagedot key={i} index={i}></Pagedot>);\r\n        }\r\n        return items;   \r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"Pagination\">\r\n                {this.generateUI()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Pagination;","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Pagination\\index.js",["458","459","460","461","462"],"import {React, useState, useEffect} from 'react';\r\nimport PaginationController from './PaginationController';\r\nimport PaginationView from './PaginationView';\r\nimport './pagination.scss';\r\nconst Pagination = (props) => {\r\n   let getTotalPageNumbers = () => {\r\n        var totalItems = props.dalist.length;\r\n        var divider = parseInt(itemPerPage);\r\n        return Math.ceil(totalItems/divider);\r\n    }\r\n    let getItemsForPage = (startIndex) => {\r\n        let newList = [...props.dalist];\r\n        let itemsList =  newList.splice(startIndex, itemPerPage);\r\n        return itemsList;\r\n    } \r\n    let handlePageChange = (indexFromController) => {\r\n       setCurPage(indexFromController);\r\n    }\r\n    let nextPage = () => {\r\n        let next = parseInt(curPage) + 1;//Added parseInt here because the curPage sometimes is string\r\n        setCurPage(next);\r\n    }\r\n    let prevPage = () => {\r\n        let prev = curPage - 1;\r\n        setCurPage(prev);\r\n    }\r\n    let firstPage = () =>{\r\n        setCurPage(0);\r\n    }\r\n    let lastPage = () =>{\r\n        setCurPage(getTotalPageNumbers() - 1);\r\n    }\r\n    const [itemPerPage, setItemPerPage] = useState(8);//how many item to display\r\n   // const [itemWidth, setItemWidth] = useState(30); //percentage width of items\r\n    const [curList, setCurList] = useState(getItemsForPage(0));\r\n    const [pageNumber, setPageNumber] = useState(getTotalPageNumbers());\r\n    const [curPage, setCurPage] = useState(0);//deduct one to get the start index\r\n    const [paginified,setPaginified] = useState(pageNumber>0);\r\n    //props.dalist got update from search result\r\n\r\n    useEffect(()=>{\r\n                var totalPages = getTotalPageNumbers();\r\n                setCurList(getItemsForPage(0));\r\n                setPageNumber(totalPages);\r\n                setPaginified(totalPages >= 2);\r\n            },[]);\r\n    useEffect((prev,next)=>{ \r\n        if (prev != props){\r\n            var totalPages = getTotalPageNumbers();\r\n            setCurList(getItemsForPage(0));\r\n            setCurPage(0);\r\n            setPageNumber(totalPages);\r\n            setPaginified(totalPages >= 2);\r\n        }\r\n    },[props.dalist]); \r\n    useEffect(()=>{\r\n         \r\n        setCurList(getItemsForPage(curPage*itemPerPage));\r\n    },[curPage]);\r\n    return (\r\n        <div className=\"pagination\">\r\n            {paginified && <PaginationController list={curList} prev={prevPage} next={nextPage} last={lastPage} cur={curPage} lastP={getTotalPageNumbers()-1} first={firstPage} pageNo={pageNumber} handlePageChange={handlePageChange}></PaginationController>\r\n            }\r\n            <PaginationView list={curList}></PaginationView>\r\n            { paginified &&\r\n            <PaginationController list={curList} prev={prevPage} next={nextPage} last={lastPage} cur={curPage} lastP={getTotalPageNumbers()-1} first={firstPage} pageNo={pageNumber} handlePageChange={handlePageChange}></PaginationController>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\Plugins\\LinkCards\\LinkCard\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\Collaspable\\index.js",["463","464","465"],"import React, {useState,useEffect, useImperativeHandle} from 'react';\r\nimport './collapsable.scss';\r\nconst Collapsable = React.forwardRef((props,ref) => {\r\n    //States\r\n    let [idChosenDiv, setIdChosenDiv] = useState(\"chosen_\"+props.itemName);\r\n    let [idChangeDiv, setIdChangeDiv] = useState(\"change_field_\"+props.itemName);\r\n\r\n\r\n    //Methods of the component\r\n      //When user click change button to change their cards option\r\n    let handleChange = (e) =>{\r\n        e.stopPropagation();\r\n        var changeField = document.getElementById(idChangeDiv);\r\n        var chosen = document.getElementById(idChosenDiv);\r\n        changeField.classList.remove(\"display-none\");\r\n        chosen.classList.add(\"display-none\");\r\n    }\r\n      //when use click close button or commit to change to hide the change option tab\r\n    let handleClose = (e) =>{\r\n       e.stopPropagation();\r\n       var changeField = document.getElementById(idChangeDiv);\r\n       var chosen = document.getElementById(idChosenDiv);\r\n        chosen.classList.remove(\"display-none\");\r\n        changeField.classList.add(\"display-none\");\r\n    }\r\n    useImperativeHandle(ref, ()=>({//expose the component methods to its user, must use useRef to refer to it \r\n        handleChange: handleChange,\r\n        handleClose: handleClose,\r\n    }));\r\n    return (\r\n        <div className=\"collapsable\">\r\n            <div id={idChosenDiv} className=\"chosen-collapsable\">\r\n                {props.chosenChildren}\r\n                <button className=\"change-btn\" onClick={handleChange}>Change</button>\r\n            </div>\r\n            <div id={idChangeDiv} className=\"change-collapsable display-none\">\r\n                {props.changeChildren}\r\n                {props.extra? props.extra : \"\"}\r\n                <button className=\"close-btn\" onClick={handleClose}>Commit Change (Close)</button>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Collapsable;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Home\\Banner\\BannerItem\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Pagination\\PaginationView\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Pagination\\PaginationController\\index.js",["466","467","468","469","470","471","472","473","474","475","476"],"import { checkPropTypes } from 'prop-types';\r\nimport React, {useState, useEffect} from 'react';\r\nimport './pagination-controller.scss';\r\nconst PaginationController = (props) => {\r\n    const [curPage, setCurPage] = useState(props.cur);\r\n    const [,setState] = useState();\r\n    const [lastPage, setLastPage] = useState(props.lastP);\r\n    const [listOfPage,setListOfPage] = useState([]);\r\n    let generatePageNo = () =>{\r\n        let arrays = [];\r\n        let i = 0;\r\n        let length = props.pageNo;\r\n        while(i < length){\r\n            arrays.push((<span  data-index={i} onClick={(e)=>{\r\n                e.stopPropagation();\r\n                let index = e.target.getAttribute(\"data-index\");\r\n                props.handlePageChange(index);\r\n            }} className={(props.cur == i? \"cur-page-btn \" : \"\") + \"page-no\"} key={i}>{i + 1}</span>));\r\n            i+=1;\r\n        }\r\n        return arrays;\r\n    }\r\n   \r\n    useEffect(()=>{\r\n        //if the current page number is updated\r\n        setCurPage(props.cur);\r\n        setListOfPage(generatePageNo());\r\n    },[props.cur]);\r\n    useEffect(()=>{\r\n        setListOfPage(generatePageNo());\r\n    },[props.pageNo]);\r\n    return (\r\n        <div className=\"pagination-controller\">\r\n            <span hidden={curPage == 0} className=\"first-btn\" onClick={(e)=>{\r\n                e.stopPropagation();\r\n                props.first();\r\n            }}>First</span>\r\n            <span className=\"prev-btn\" hidden={curPage == 0} onClick={(e)=>{\r\n                e.stopPropagation();\r\n                props.prev();\r\n            }}>Prev</span>\r\n            <span key={curPage} className=\"pages-number\">\r\n                {listOfPage}\r\n            </span>\r\n            <span hidden={curPage == props.lastP } className=\"next-btn\"onClick={(e)=>{\r\n                e.stopPropagation();\r\n                props.next();\r\n            }}>Next</span>\r\n            <span hidden={curPage == props.lastP } className=\"last-btn\"onClick={(e)=>{\r\n                e.stopPropagation();\r\n                props.last();\r\n            }}>Last</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaginationController;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\CustomerService\\index.js",["477"],"import React, {useState, useEffect} from 'react';\r\nimport FlexLinks from './../Plugins/FlexLinks';\r\nimport SERVICEITEMS from './../../Constants/ServicesItems';\r\nimport {AiFillCreditCard} from 'react-icons/ai';\r\nimport {MdAssignmentReturn, MdAccountBox} from 'react-icons/md';\r\nimport {FaGift} from 'react-icons/fa';\r\nimport {GiHelp} from 'react-icons/gi';\r\nimport {RiShoppingBag2Fill} from 'react-icons/ri';\r\nimport \"./customer-service.scss\";\r\nconst CustomerService = () => {\r\n    const [list, setList] =  useState(null);\r\n    const SERVICESICONS = {\r\n        \"help and guide\": <GiHelp></GiHelp>, \r\n        \"refunds\": <MdAssignmentReturn></MdAssignmentReturn> , \r\n        \"your account\": <MdAccountBox></MdAccountBox> , \r\n        \"payments\": <AiFillCreditCard></AiFillCreditCard>,\r\n        \"gift cards\": <FaGift></FaGift>, \r\n        \"orders\": <RiShoppingBag2Fill></RiShoppingBag2Fill>}\r\n    useEffect(() => {\r\n        let daList = SERVICEITEMS.map((item)=>{\r\n            item.extra = SERVICESICONS[item.title];\r\n            return item;\r\n        });\r\n        setList(daList);\r\n    }, []);\r\n    return (\r\n        <div className=\"customer-service\">\r\n            <h4>Customer Service</h4>\r\n            {list !== null && <FlexLinks list={list} >\r\n\r\n            </FlexLinks>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomerService;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\Constants\\ServicesItems.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\FlexLinks\\index.js",["478","479"],"import React, {useState, useEffect} from 'react';\r\nimport FlexLink from './FlexLink';\r\nimport './flex-links.scss';\r\nconst FlexLinks = (props) => {\r\n    let prepareItems = () => {\r\n        let daList = props.list.map((item)=>\r\n        (<FlexLink   title = {item.title}\r\n            route = {item.route}\r\n            extra = {item.extra? item.extra: \"\"}>\r\n        </FlexLink> \r\n        ));\r\n        return daList;\r\n    }\r\n    return (\r\n        <div className=\"flex-links flex-links-parent\">\r\n            {prepareItems()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FlexLinks;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\FlexLinks\\FlexLink\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\ProtectedRoute\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\CustomerService\\Help\\index.js",["480","481","482","483"],"import React, {useState, useEffect} from 'react';\r\nimport CollapseTab from './../../Plugins/CollapseTab';\r\nimport Firebase from './../../Firebase';\r\nimport './help.scss';\r\nconst Help = (props) => {\r\n    let {sub,section} = props.match.params;\r\n    const db = Firebase.firestore();\r\n    const LIST_MAIN_ITEMS = [\"helps\", \"guides\"];\r\n    let preparedList;\r\n    let updateCurrentItem = (item) =>{\r\n        setCurrentItem(item);\r\n    }\r\n    const [list, setList] = useState([\r\n        {\r\n            title: \"helps\",\r\n            content: \"\"\r\n        },\r\n        {\r\n            title: \"guides\",\r\n            content: \"\"\r\n        }\r\n    ])\r\n    let retrieveDocumentsFromFireStore = () =>{\r\n        for (let i = 0; i < LIST_MAIN_ITEMS.length; i += 1){\r\n            let daList = [];\r\n            db.collection(LIST_MAIN_ITEMS[i]).onSnapshot((querySnapshot) => {\r\n                querySnapshot.forEach((doc)=>{\r\n                    daList.push(doc.data());\r\n                });\r\n                let newArr = [...list];\r\n                newArr[i].content =  <ul className={LIST_MAIN_ITEMS[i] + \" side-panel-items\"}>{daList.map((item)=>(\r\n                    <li key={item.title} className=\"help-list-item\" onClick={()=>{\r\n                        updateCurrentItem(item);\r\n                    }}>{item.title}</li>))}\r\n                    </ul>;\r\n                setList(newArr);\r\n            })\r\n        }\r\n      \r\n    }\r\n   \r\n    const [currentItem, setCurrentItem] = useState(null);\r\n    const [proccessedList, SetProcessedList] = useState([]);\r\n    let processContentParagraph = (p) =>{\r\n        let paragraphs = p.split(\"$$$\");\r\n        return paragraphs.map((item, index)=>(\r\n            <p key={index}>{item}</p>\r\n        ));\r\n    }\r\n    useEffect(() => {\r\n            retrieveDocumentsFromFireStore();\r\n    }, []);\r\n    useEffect(()=>{\r\n        if(proccessedList.length === 0){\r\n            SetProcessedList(list);\r\n        }\r\n    },[list]);\r\n    useEffect(()=>{\r\n        if(proccessedList.length !== 0){\r\n            //whenever params changes or the List is ready, update the current Item\r\n            if(sub && section){\r\n                db.collection(section).doc(sub.replaceAll(\"_\",\" \")).get().then((snap)=>{\r\n                    setCurrentItem(snap.data());\r\n                })\r\n            }\r\n        }\r\n    },[proccessedList,props.match.params]);\r\n    return (\r\n        <div className=\"help\">\r\n            <h4>Help</h4>\r\n            <div className=\"panel\">\r\n            <div className=\"side-panel\">\r\n                <CollapseTab list={proccessedList? proccessedList : []} >\r\n                </CollapseTab>\r\n            </div>\r\n            <div className=\"display-panel\">\r\n                {currentItem ? <div>\r\n                    <h3>{currentItem.title}</h3>\r\n                    <div className=\"help-content\">{processContentParagraph(currentItem.content)}</div>\r\n                </div>:<div className=\"no current Item\">Please choose the question on the collapsable list on the left side</div>}\r\n               \r\n            </div>\r\n            </div>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Help;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\CollapseTab\\index.js",["484"],"import React from 'react';\r\nimport './collapse-tab.scss';\r\nimport {RiArrowUpSLine,RiArrowDownSLine} from 'react-icons/ri';\r\nconst CollapseTab = (props) => {\r\n    let handleCollapse = (e) => {\r\n        const target = e.target;\r\n        let contentBox, id, arrowUp, arrowDown;\r\n        if(target.nodeName ===\"IMG\"){\r\n            contentBox =  target.parentElement.parentElement.nextSibling;\r\n            contentBox.classList.toggle(\"display-none\");\r\n        } else if(!target.matches(\".collapse-title\")){\r\n            contentBox = target.parentElement.nextSibling\r\n            contentBox.classList.toggle(\"display-none\");\r\n        } else {\r\n           contentBox =  target.nextElementSibling;\r\n           contentBox.classList.toggle(\"display-none\")\r\n        };\r\n        id = contentBox.getAttribute(\"id\");\r\n        arrowUp = contentBox.previousSibling.children[0];\r\n        arrowDown = contentBox.previousSibling.children[1];\r\n        if(contentBox.classList.contains(\"display-none\")){\r\n            arrowUp.classList.add(\"hidden-arrow\");\r\n            arrowDown.classList.remove(\"hidden-arrow\"); \r\n        }else{\r\n            arrowUp.classList.remove(\"hidden-arrow\");\r\n            arrowDown.classList.add(\"hidden-arrow\"); \r\n        }\r\n    }\r\n    return (\r\n        <div className=\"collapse-tabs\">\r\n            {props.list && props.list.map((item,index)=>{\r\n                return(\r\n                <div className=\"collapse-tab\" key={index} id={\"collapse-\"+index}>\r\n                    <div className=\"collapse-title\" onClick={handleCollapse}>\r\n                        {item.title}\r\n                        <RiArrowUpSLine id={index+\"-arrowup\"}></RiArrowUpSLine>\r\n                        <RiArrowDownSLine id={index+\"-arrowdown\"} className=\"hidden-arrow\"></RiArrowDownSLine>\r\n                    </div>\r\n                    <div className=\"collapse-content\" id={index}>\r\n                        {item.content}\r\n                    </div>\r\n                </div>\r\n                )\r\n            })}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CollapseTab;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Footer\\index.js",["485","486","487"],"import React, {useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Firebase from 'firebase';\r\nimport './footer.scss';\r\nconst Footer = () => {\r\n    const [list, setList] = useState({});\r\n    const [preparedList, setPreparedList] = useState([]);\r\n    const db = Firebase.firestore();\r\n    const LIST_OF_ITEMS = [\"account guides\", \"helps\" ,\"guides\"];\r\n    const currentTime = new Date();\r\n    let fetchItems = () =>{\r\n        let myList = {};\r\n        for (var i = 0; i < LIST_OF_ITEMS.length; i += 1){\r\n            let item = LIST_OF_ITEMS[i];\r\n            let daList = [];\r\n            db.collection(item).get().then(querySnapshot=>{\r\n                querySnapshot.forEach(data=>{\r\n                    daList.push(data.data());\r\n                });\r\n               myList[item] = daList;\r\n               // setList((prevState) => {...prevState, holdArray});\r\n            }).then(()=>{\r\n                if(Object.keys(myList).length === LIST_OF_ITEMS.length){\r\n                    //to make sure that there is maximum items of the array \r\n                    setList(myList);\r\n                }\r\n            })\r\n        }\r\n        \r\n        }\r\n    let prepareComponents = () =>{\r\n        setPreparedList(()=>{\r\n            let array = [];\r\n            for (var dakey in list){\r\n                array.push(<ul key={dakey} className=\"footer-items\">\r\n                    <li className=\"main-item\">{dakey}</li>\r\n                    {list[dakey].map((item)=>(\r\n                        <li key={item.title}><Link to={item.route? item.route: \"#\"}>{item.title}</Link></li>\r\n                    ))}\r\n                </ul>)\r\n            }\r\n            return array;\r\n        })\r\n    }\r\n    useEffect(() => {\r\n            fetchItems();\r\n    }, []);\r\n    useEffect(()=>{\r\n       prepareComponents();\r\n    },[list])\r\n    return (\r\n        <div className=\"footer\">\r\n            {preparedList ? preparedList : \"Nothing\"}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\ContactUs\\index.js",["488","489"],"import React,{useEffect, useState} from 'react';\r\nimport EmailForm from './EmailForm';\r\nimport ContactInfo from './ContactInfo';\r\nimport {RiProfileLine} from 'react-icons/ri';\r\nimport {MdEmail} from 'react-icons/md';\r\nimport './contact-us.scss';\r\nconst ContactUs = (props) => {\r\n\r\n    return (\r\n        <div className=\"contact-us\">\r\n            <h4> Contact Us</h4>\r\n            <h6 className=\"contact-title\"><RiProfileLine></RiProfileLine>Contact Information</h6>\r\n            <ContactInfo></ContactInfo>\r\n            <h6 className=\"contact-title\"><MdEmail></MdEmail> sent us an email!</h6>\r\n            <EmailForm account={props.account}></EmailForm>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContactUs;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\Constants\\EmailJSInfo.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\ContactUs\\EmailForm\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\ContactUs\\ContactInfo\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\ContactUs\\ContactInfo\\ContactBox\\index.js",["490","491"],"import React, {useState,useEffect} from 'react';\r\nimport './contact-box.scss';\r\nimport Firebase from \"./../../../Firebase\";\r\nimport {AiOutlineShop, AiOutlinePhone, AiOutlineMail} from 'react-icons/ai';\r\nimport {GoLocation} from 'react-icons/go';\r\nconst ContactBox = () => {\r\n    const [list, setList] = useState([]);\r\n    const [preparedComponent, setPreparedComponent] = useState([]);\r\n    const db = Firebase.firestore();\r\n    const ICON_MATCH = {\r\n        \"company name\": <AiOutlineShop></AiOutlineShop>,\r\n        \"phone\": <AiOutlinePhone></AiOutlinePhone>,\r\n        \"email\": <AiOutlineMail></AiOutlineMail>,\r\n        \"address\": <GoLocation></GoLocation>,\r\n    }\r\n    let fetchListFromDb = () =>{\r\n        db.collection(\"contact informations\").get().then((snap)=>{\r\n            let dalist = [...list];\r\n            snap.forEach((item)=>{\r\n                dalist.push(item.data());\r\n            });\r\n            setList(dalist);\r\n        })\r\n    }\r\n    let makeComponentFromList = () => {\r\n        return list.map((item)=>(\r\n            <div key={item.title} className=\"contact-bar\">\r\n                <div className=\"contact-title\">\r\n                    {ICON_MATCH[item.title]}\r\n                </div>\r\n                <div className=\"contact-content\">\r\n                    {item.content}\r\n                </div>\r\n            </div>\r\n        )) \r\n  \r\n    }\r\n    useEffect(()=>{\r\n        fetchListFromDb();\r\n    },[])\r\n    useEffect(() => {\r\n        if(preparedComponent.length === 0){\r\n            setPreparedComponent(makeComponentFromList());\r\n        }\r\n    }, [list]);\r\n    return (\r\n        <div className=\"contact-box\">\r\n            {preparedComponent? preparedComponent : \"\"}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContactBox;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\ContactUs\\ContactInfo\\MapLocation\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\ContactUs\\ContactInfo\\MapLocation\\Marker\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\KartDetail\\SadBag\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\PlaceOrder\\YourShipping\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\PlaceOrder\\YourTotal\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\PlaceOrder\\YourPayment\\index.js",["492"],"import React, {useState, useEffect} from 'react';\r\nimport './your-payment.scss';\r\nconst YourPayment = (props) => {\r\n    const [cardEnd, setCardEnd] = useState(\"\");\r\n    useEffect(()=>{\r\n        let str = props.card[\"card number\"];\r\n        setCardEnd(str.slice(str.length-4));\r\n    },[]) \r\n    return (\r\n        <div className=\"your-payment sub-box flex-full\">\r\n                        <h5>Payment method</h5>\r\n                        <span>{props.card.owner}</span>\r\n                        <span> Card ending in {cardEnd}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default YourPayment;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\PlaceOrder\\YourOrder\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\DisplayPanel\\index.js",["493","494","495","496","497","498"],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\OptionPanel\\index.js",["499","500"],"import React, {useState, useEffect} from 'react';\r\nimport './option-panel.scss';\r\nconst OptionPanel = (props) => {\r\n    const [list, setList] = useState([]);\r\n    const [current, setCurrent] = useState(props.list[0].name);\r\n    useEffect(() => {\r\n        setList(props.list);\r\n    }, []);\r\n    return (\r\n        <ul className=\"option-panel\">\r\n            {list.length > 0 ? list.map((item) =>\r\n                (<li key={item.name}>\r\n                    <a className={current === item.name ? \"currentOp\" : \"\"} onClick={(e)=>{\r\n                        e.preventDefault();\r\n                        props.setCurrent(item.name);\r\n                        setCurrent(item.name);\r\n                    }} href=\"#\">\r\n                        {item.name}\r\n                    </a>\r\n                </li>)\r\n            ) : <span>No item</span>}        \r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default OptionPanel;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\CustomSelect\\index.js",["501","502","503","504"],"import React, {useState,useEffect} from 'react';\r\nimport './custom-select.scss';\r\nconst CustomSelect = (props) =>{\r\n    //to provide list for list of item, desiredField for what value or name would be used in the item \r\n    //optional setOption function to be passed so that any change from here will be notified to the user \r\n    //of this plugin\r\n    const [list, setList] = useState(props.list);\r\n    const [id, setID] = useState(props.id);\r\n    const [selected, setSelected] = useState({});\r\n    const [dropped, setDropped] = useState(false);\r\n    const [desiredField, setDesiredField] = useState(props.desiredField? props.desiredField : \"name\");\r\n    let handleSelected = (item) =>{\r\n        setSelected(item);\r\n        //if the user pass the set option function\r\n        props.setOption && props.setOption(item);\r\n        closeList();\r\n    }\r\n    let dropList = (e) =>{\r\n        e.stopPropagation();\r\n        setDropped(true);\r\n        var dropdown = document.getElementById(id);\r\n        if (dropdown){\r\n            dropdown.classList.add(\"expanded\");\r\n        }\r\n    }\r\n    let closeList = () =>{\r\n        setDropped(false);\r\n        var dropdown = document.getElementById(id);\r\n        if(dropdown){\r\n            dropdown.classList.remove(\"expanded\");\r\n        }\r\n       \r\n    }\r\n    let handleOutSideClick = () =>{\r\n        const outsideClickListener = e => {\r\n            if(e.target.closest(\"custom-select\") === null){\r\n                //function to close component is here\r\n                closeList();\r\n                removeOutsideClick();\r\n            } \r\n        }\r\n        const removeOutsideClick = () =>{\r\n            document.removeEventListener(\"click\",handleOutSideClick);\r\n        }\r\n        document.addEventListener('click', outsideClickListener);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setList(props.list);\r\n        setSelected(props.selected? props.selected: props.list[0]);\r\n    }, []);\r\n    useEffect(()=>{\r\n        setList(props.list);\r\n    },[props.list])\r\n    return (\r\n        <div className=\"custom-select\">\r\n            <div className=\"select-list-container\">\r\n                <div onClick={(e)=>{\r\n                dropList(e); \r\n                handleOutSideClick();\r\n                }} className={\"selected\" + (dropped? \" select-clicked\" : \" \") }>{props.label ? props.label : \"Select \" + desiredField} \r\n                {!dropped ? <span className=\"material-icons-outlined\">expand_more</span> : <span className=\"material-icons-outlined\">expand_less</span> }</div>\r\n                <div className=\"list-dropdown\" id={id}>\r\n                    {list && list.map((item)=>(\r\n                        <div key={item[desiredField]} onClick={(e)=>{\r\n                            handleSelected(item)}}>\r\n                            {item[desiredField]}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomSelect;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\CoolTable\\index.js",["505","506"],"import React, {useEffect} from 'react';\r\nimport TableTitle from './TableTitle';\r\nimport TableRow from './TableRow';\r\nimport './cool-table.scss';\r\nconst CoolTable = (props) => {\r\n    useEffect(()=>{\r\n    \r\n    },[])\r\n    return (\r\n        <div className=\"cool-table\">\r\n            {props.children}\r\n            {props.titleList &&  <TableTitle titleList={props.titleList}></TableTitle>}\r\n            {props.list ? <div className=\"row-container\">\r\n                {\r\n                    props.list.map((item) => {\r\n                        let componentTotal = [];\r\n     \r\n                        for(var i = 0; i <props.titleList.length; i+=1){\r\n                            var component;\r\n                            if(props.titleList[i] === \"preview\"){\r\n                                component = <div className={\"table-data\"+\" col-\"+(i+1)}>\r\n                                <img alt={item.name} src={require('./../../../images/' + item.id + \"-\" + item.type+ \".jpg\")}></img>\r\n                            </div>;\r\n                            } else {\r\n                                component = <div className={\"table-data\"+\" col-\"+(i+1)}>{item[props.titleList[i]]}</div> \r\n                            }\r\n                            componentTotal.push(component)\r\n                        }\r\n                        return <TableRow key={item.name}>{componentTotal}</TableRow>;\r\n                    })\r\n                }\r\n            </div>:<div>No item yet</div>}         \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CoolTable;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\CoolTable\\TableTitle\\index.js",["507"],"import React from 'react';\r\nimport './table-title.scss';\r\nconst TableTitle = (props) => {\r\n    return (\r\n        <div className=\"table-title\">\r\n            {props.titleList && props.titleList.map((item,index)=>(\r\n                <div className={\"title-item\"+\" col-\"+(index+1)} key={item}>{item}</div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableTitle;\r\n","C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Plugins\\CoolTable\\TableRow\\index.js",[],"C:\\Users\\quang chu\\OneDrive\\Desktop\\Front end apps\\React Practice\\commercial\\src\\components\\Account\\Orders\\NoOrder\\index.js",[],{"ruleId":"508","replacedBy":"509"},{"ruleId":"510","replacedBy":"511"},{"ruleId":"512","severity":1,"message":"513","line":17,"column":8,"nodeType":"514","messageId":"515","endLine":17,"endColumn":14},{"ruleId":"512","severity":1,"message":"516","line":19,"column":8,"nodeType":"514","messageId":"515","endLine":19,"endColumn":13},{"ruleId":"512","severity":1,"message":"517","line":20,"column":8,"nodeType":"514","messageId":"515","endLine":20,"endColumn":14},{"ruleId":"518","severity":1,"message":"519","line":125,"column":32,"nodeType":"520","messageId":"521","endLine":125,"endColumn":33},{"ruleId":"522","severity":1,"message":"523","line":166,"column":24,"nodeType":"524","messageId":"525","endLine":166,"endColumn":26},{"ruleId":"526","severity":1,"message":"527","line":225,"column":11,"nodeType":"528","endLine":225,"endColumn":13,"suggestions":"529"},{"ruleId":"526","severity":1,"message":"530","line":238,"column":11,"nodeType":"528","endLine":238,"endColumn":17,"suggestions":"531"},{"ruleId":"512","severity":1,"message":"532","line":2,"column":15,"nodeType":"514","messageId":"515","endLine":2,"endColumn":23},{"ruleId":"512","severity":1,"message":"533","line":7,"column":10,"nodeType":"514","messageId":"515","endLine":7,"endColumn":16},{"ruleId":"534","severity":1,"message":"535","line":89,"column":9,"nodeType":"536","endLine":89,"endColumn":19},{"ruleId":"534","severity":1,"message":"535","line":95,"column":9,"nodeType":"536","endLine":95,"endColumn":19},{"ruleId":"508","replacedBy":"537"},{"ruleId":"510","replacedBy":"538"},{"ruleId":"512","severity":1,"message":"539","line":2,"column":9,"nodeType":"514","messageId":"515","endLine":2,"endColumn":12},{"ruleId":"512","severity":1,"message":"540","line":10,"column":11,"nodeType":"514","messageId":"515","endLine":10,"endColumn":19},{"ruleId":"541","severity":1,"message":"542","line":95,"column":33,"nodeType":"543","endLine":95,"endColumn":134},{"ruleId":"512","severity":1,"message":"544","line":15,"column":19,"nodeType":"514","messageId":"515","endLine":15,"endColumn":27},{"ruleId":"526","severity":1,"message":"545","line":44,"column":8,"nodeType":"528","endLine":44,"endColumn":17,"suggestions":"546"},{"ruleId":"512","severity":1,"message":"547","line":1,"column":16,"nodeType":"514","messageId":"515","endLine":1,"endColumn":25},{"ruleId":"512","severity":1,"message":"548","line":1,"column":37,"nodeType":"514","messageId":"515","endLine":1,"endColumn":43},{"ruleId":"526","severity":1,"message":"549","line":29,"column":8,"nodeType":"528","endLine":29,"endColumn":10,"suggestions":"550"},{"ruleId":"512","severity":1,"message":"540","line":8,"column":13,"nodeType":"514","messageId":"515","endLine":8,"endColumn":21},{"ruleId":"541","severity":1,"message":"542","line":37,"column":33,"nodeType":"543","endLine":37,"endColumn":106},{"ruleId":"534","severity":1,"message":"535","line":25,"column":8,"nodeType":"536","endLine":25,"endColumn":18},{"ruleId":"512","severity":1,"message":"551","line":26,"column":12,"nodeType":"514","messageId":"515","endLine":26,"endColumn":19},{"ruleId":"526","severity":1,"message":"552","line":218,"column":8,"nodeType":"528","endLine":218,"endColumn":10,"suggestions":"553"},{"ruleId":"526","severity":1,"message":"554","line":226,"column":8,"nodeType":"528","endLine":226,"endColumn":28,"suggestions":"555"},{"ruleId":"526","severity":1,"message":"552","line":229,"column":7,"nodeType":"528","endLine":229,"endColumn":19,"suggestions":"556"},{"ruleId":"557","severity":1,"message":"558","line":16,"column":9,"nodeType":"559","messageId":"525","endLine":16,"endColumn":11},{"ruleId":"526","severity":1,"message":"552","line":206,"column":8,"nodeType":"528","endLine":206,"endColumn":10,"suggestions":"560"},{"ruleId":"522","severity":1,"message":"523","line":208,"column":46,"nodeType":"524","messageId":"525","endLine":208,"endColumn":48},{"ruleId":"526","severity":1,"message":"554","line":214,"column":8,"nodeType":"528","endLine":214,"endColumn":28,"suggestions":"561"},{"ruleId":"526","severity":1,"message":"552","line":217,"column":7,"nodeType":"528","endLine":217,"endColumn":19,"suggestions":"562"},{"ruleId":"526","severity":1,"message":"563","line":33,"column":7,"nodeType":"528","endLine":33,"endColumn":9,"suggestions":"564"},{"ruleId":"512","severity":1,"message":"547","line":1,"column":16,"nodeType":"514","messageId":"515","endLine":1,"endColumn":25},{"ruleId":"512","severity":1,"message":"565","line":2,"column":21,"nodeType":"514","messageId":"515","endLine":2,"endColumn":25},{"ruleId":"512","severity":1,"message":"566","line":23,"column":9,"nodeType":"514","messageId":"515","endLine":23,"endColumn":33},{"ruleId":"567","severity":1,"message":"568","line":46,"column":35,"nodeType":"569","messageId":"570","endLine":46,"endColumn":37},{"ruleId":"526","severity":1,"message":"571","line":95,"column":7,"nodeType":"528","endLine":95,"endColumn":18,"suggestions":"572"},{"ruleId":"512","severity":1,"message":"573","line":1,"column":36,"nodeType":"514","messageId":"515","endLine":1,"endColumn":55},{"ruleId":"512","severity":1,"message":"574","line":15,"column":12,"nodeType":"514","messageId":"515","endLine":15,"endColumn":18},{"ruleId":"512","severity":1,"message":"575","line":15,"column":20,"nodeType":"514","messageId":"515","endLine":15,"endColumn":29},{"ruleId":"512","severity":1,"message":"576","line":16,"column":22,"nodeType":"514","messageId":"515","endLine":16,"endColumn":33},{"ruleId":"512","severity":1,"message":"577","line":17,"column":12,"nodeType":"514","messageId":"515","endLine":17,"endColumn":17},{"ruleId":"512","severity":1,"message":"551","line":35,"column":17,"nodeType":"514","messageId":"515","endLine":35,"endColumn":24},{"ruleId":"526","severity":1,"message":"578","line":95,"column":8,"nodeType":"528","endLine":95,"endColumn":10,"suggestions":"579"},{"ruleId":"526","severity":1,"message":"580","line":98,"column":8,"nodeType":"528","endLine":98,"endColumn":14,"suggestions":"581"},{"ruleId":"526","severity":1,"message":"582","line":9,"column":7,"nodeType":"528","endLine":9,"endColumn":9,"suggestions":"583"},{"ruleId":"512","severity":1,"message":"584","line":2,"column":17,"nodeType":"514","messageId":"515","endLine":2,"endColumn":25},{"ruleId":"512","severity":1,"message":"544","line":4,"column":18,"nodeType":"514","messageId":"515","endLine":4,"endColumn":26},{"ruleId":"522","severity":1,"message":"523","line":31,"column":37,"nodeType":"524","messageId":"525","endLine":31,"endColumn":39},{"ruleId":"522","severity":1,"message":"523","line":38,"column":37,"nodeType":"524","messageId":"525","endLine":38,"endColumn":39},{"ruleId":"512","severity":1,"message":"547","line":1,"column":26,"nodeType":"514","messageId":"515","endLine":1,"endColumn":35},{"ruleId":"512","severity":1,"message":"585","line":4,"column":20,"nodeType":"514","messageId":"515","endLine":4,"endColumn":29},{"ruleId":"512","severity":1,"message":"586","line":5,"column":21,"nodeType":"514","messageId":"515","endLine":5,"endColumn":31},{"ruleId":"541","severity":1,"message":"542","line":8,"column":13,"nodeType":"543","endLine":8,"endColumn":77},{"ruleId":"512","severity":1,"message":"587","line":5,"column":14,"nodeType":"514","messageId":"515","endLine":5,"endColumn":19},{"ruleId":"526","severity":1,"message":"588","line":31,"column":7,"nodeType":"528","endLine":31,"endColumn":19,"suggestions":"589"},{"ruleId":"508","replacedBy":"590"},{"ruleId":"510","replacedBy":"591"},{"ruleId":"541","severity":1,"message":"542","line":15,"column":21,"nodeType":"543","endLine":15,"endColumn":82},{"ruleId":"526","severity":1,"message":"592","line":7,"column":7,"nodeType":"528","endLine":7,"endColumn":9,"suggestions":"593"},{"ruleId":"541","severity":1,"message":"542","line":29,"column":37,"nodeType":"543","endLine":29,"endColumn":116},{"ruleId":"526","severity":1,"message":"580","line":99,"column":7,"nodeType":"528","endLine":99,"endColumn":24,"suggestions":"594"},{"ruleId":"526","severity":1,"message":"595","line":114,"column":8,"nodeType":"528","endLine":114,"endColumn":10,"suggestions":"596"},{"ruleId":"512","severity":1,"message":"597","line":22,"column":12,"nodeType":"514","messageId":"515","endLine":22,"endColumn":27},{"ruleId":"512","severity":1,"message":"598","line":36,"column":24,"nodeType":"514","messageId":"515","endLine":36,"endColumn":37},{"ruleId":"512","severity":1,"message":"599","line":14,"column":17,"nodeType":"514","messageId":"515","endLine":14,"endColumn":23},{"ruleId":"526","severity":1,"message":"600","line":43,"column":7,"nodeType":"528","endLine":43,"endColumn":9,"suggestions":"601"},{"ruleId":"526","severity":1,"message":"602","line":49,"column":7,"nodeType":"528","endLine":49,"endColumn":19,"suggestions":"603"},{"ruleId":"604","severity":1,"message":"605","line":6,"column":9,"nodeType":"543","endLine":6,"endColumn":62},{"ruleId":"512","severity":1,"message":"606","line":33,"column":25,"nodeType":"514","messageId":"515","endLine":33,"endColumn":39},{"ruleId":"526","severity":1,"message":"607","line":46,"column":15,"nodeType":"528","endLine":46,"endColumn":17,"suggestions":"608"},{"ruleId":"522","severity":1,"message":"523","line":48,"column":18,"nodeType":"524","messageId":"525","endLine":48,"endColumn":20},{"ruleId":"526","severity":1,"message":"609","line":55,"column":7,"nodeType":"528","endLine":55,"endColumn":21,"suggestions":"610"},{"ruleId":"526","severity":1,"message":"611","line":59,"column":7,"nodeType":"528","endLine":59,"endColumn":16,"suggestions":"612"},{"ruleId":"512","severity":1,"message":"547","line":1,"column":25,"nodeType":"514","messageId":"515","endLine":1,"endColumn":34},{"ruleId":"512","severity":1,"message":"613","line":5,"column":23,"nodeType":"514","messageId":"515","endLine":5,"endColumn":37},{"ruleId":"512","severity":1,"message":"614","line":6,"column":23,"nodeType":"514","messageId":"515","endLine":6,"endColumn":37},{"ruleId":"512","severity":1,"message":"615","line":1,"column":10,"nodeType":"514","messageId":"515","endLine":1,"endColumn":24},{"ruleId":"512","severity":1,"message":"540","line":6,"column":13,"nodeType":"514","messageId":"515","endLine":6,"endColumn":21},{"ruleId":"512","severity":1,"message":"616","line":7,"column":12,"nodeType":"514","messageId":"515","endLine":7,"endColumn":20},{"ruleId":"512","severity":1,"message":"617","line":7,"column":22,"nodeType":"514","messageId":"515","endLine":7,"endColumn":33},{"ruleId":"522","severity":1,"message":"618","line":18,"column":38,"nodeType":"524","messageId":"525","endLine":18,"endColumn":40},{"ruleId":"526","severity":1,"message":"619","line":28,"column":7,"nodeType":"528","endLine":28,"endColumn":18,"suggestions":"620"},{"ruleId":"526","severity":1,"message":"619","line":31,"column":7,"nodeType":"528","endLine":31,"endColumn":21,"suggestions":"621"},{"ruleId":"522","severity":1,"message":"618","line":34,"column":35,"nodeType":"524","messageId":"525","endLine":34,"endColumn":37},{"ruleId":"522","severity":1,"message":"618","line":38,"column":56,"nodeType":"524","messageId":"525","endLine":38,"endColumn":58},{"ruleId":"522","severity":1,"message":"618","line":45,"column":35,"nodeType":"524","messageId":"525","endLine":45,"endColumn":37},{"ruleId":"522","severity":1,"message":"618","line":49,"column":35,"nodeType":"524","messageId":"525","endLine":49,"endColumn":37},{"ruleId":"526","severity":1,"message":"622","line":25,"column":8,"nodeType":"528","endLine":25,"endColumn":10,"suggestions":"623"},{"ruleId":"512","severity":1,"message":"624","line":1,"column":16,"nodeType":"514","messageId":"515","endLine":1,"endColumn":24},{"ruleId":"512","severity":1,"message":"547","line":1,"column":26,"nodeType":"514","messageId":"515","endLine":1,"endColumn":35},{"ruleId":"512","severity":1,"message":"625","line":9,"column":9,"nodeType":"514","messageId":"515","endLine":9,"endColumn":21},{"ruleId":"526","severity":1,"message":"626","line":52,"column":8,"nodeType":"528","endLine":52,"endColumn":10,"suggestions":"627"},{"ruleId":"526","severity":1,"message":"628","line":57,"column":7,"nodeType":"528","endLine":57,"endColumn":13,"suggestions":"629"},{"ruleId":"526","severity":1,"message":"630","line":67,"column":7,"nodeType":"528","endLine":67,"endColumn":42,"suggestions":"631"},{"ruleId":"512","severity":1,"message":"632","line":18,"column":9,"nodeType":"514","messageId":"515","endLine":18,"endColumn":11},{"ruleId":"512","severity":1,"message":"633","line":10,"column":11,"nodeType":"514","messageId":"515","endLine":10,"endColumn":22},{"ruleId":"526","severity":1,"message":"634","line":47,"column":8,"nodeType":"528","endLine":47,"endColumn":10,"suggestions":"635"},{"ruleId":"526","severity":1,"message":"636","line":50,"column":7,"nodeType":"528","endLine":50,"endColumn":13,"suggestions":"637"},{"ruleId":"512","severity":1,"message":"547","line":1,"column":15,"nodeType":"514","messageId":"515","endLine":1,"endColumn":24},{"ruleId":"512","severity":1,"message":"624","line":1,"column":26,"nodeType":"514","messageId":"515","endLine":1,"endColumn":34},{"ruleId":"526","severity":1,"message":"638","line":40,"column":7,"nodeType":"528","endLine":40,"endColumn":9,"suggestions":"639"},{"ruleId":"526","severity":1,"message":"640","line":45,"column":8,"nodeType":"528","endLine":45,"endColumn":14,"suggestions":"641"},{"ruleId":"526","severity":1,"message":"642","line":8,"column":7,"nodeType":"528","endLine":8,"endColumn":9,"suggestions":"643"},{"ruleId":"512","severity":1,"message":"644","line":6,"column":8,"nodeType":"514","messageId":"515","endLine":6,"endColumn":17},{"ruleId":"512","severity":1,"message":"645","line":32,"column":11,"nodeType":"514","messageId":"515","endLine":32,"endColumn":20},{"ruleId":"522","severity":1,"message":"523","line":307,"column":71,"nodeType":"524","messageId":"525","endLine":307,"endColumn":73},{"ruleId":"512","severity":1,"message":"646","line":372,"column":9,"nodeType":"514","messageId":"515","endLine":372,"endColumn":31},{"ruleId":"526","severity":1,"message":"647","line":433,"column":7,"nodeType":"528","endLine":433,"endColumn":9,"suggestions":"648"},{"ruleId":"526","severity":1,"message":"649","line":439,"column":8,"nodeType":"528","endLine":439,"endColumn":23,"suggestions":"650"},{"ruleId":"526","severity":1,"message":"592","line":8,"column":8,"nodeType":"528","endLine":8,"endColumn":10,"suggestions":"651"},{"ruleId":"604","severity":1,"message":"605","line":13,"column":21,"nodeType":"543","endLine":17,"endColumn":33},{"ruleId":"512","severity":1,"message":"652","line":8,"column":16,"nodeType":"514","messageId":"515","endLine":8,"endColumn":21},{"ruleId":"512","severity":1,"message":"653","line":9,"column":12,"nodeType":"514","messageId":"515","endLine":9,"endColumn":20},{"ruleId":"512","severity":1,"message":"654","line":11,"column":26,"nodeType":"514","messageId":"515","endLine":11,"endColumn":41},{"ruleId":"526","severity":1,"message":"655","line":51,"column":8,"nodeType":"528","endLine":51,"endColumn":10,"suggestions":"656"},{"ruleId":"657","severity":1,"message":"658","line":21,"column":73,"nodeType":"524","messageId":"659","endLine":21,"endColumn":74},{"ruleId":"657","severity":1,"message":"658","line":25,"column":73,"nodeType":"524","messageId":"659","endLine":25,"endColumn":74},{"ruleId":"657","severity":1,"message":"658","line":7,"column":45,"nodeType":"524","messageId":"659","endLine":7,"endColumn":46},"no-native-reassign",["660"],"no-negated-in-lhs",["661"],"no-unused-vars","'Orders' is defined but never used.","Identifier","unusedVar","'Cards' is defined but never used.","'GCards' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'db', 'location.pathname', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["662"],"React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.",["663"],"'Redirect' is defined but never used.","'BiBody' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression",["660"],["661"],"'BiX' is defined but never used.","'setState' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setOrder' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getImgSrcFromType'. Either include it or remove the dependency array.",["664"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'currentOption', 'getOptionItems', and 'optionItems'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentOption' needs the current value of 'optionItems'.",["665"],"'promise' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handlePreProcessingCardListToComponent'. Either include it or remove the dependency array.",["666"],"React Hook useEffect has missing dependencies: 'db' and 'props.accountID'. Either include them or remove the dependency array.",["667"],["668"],"no-dupe-keys","Duplicate key 'id'.","ObjectExpression",["669"],["670"],["671"],"React Hook useEffect has a missing dependency: 'filterOrdersByEra'. Either include it or remove the dependency array.",["672"],"'Link' is defined but never used.","'updatePasswordToTestUser' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'getPasswordFromUser' and 'user'. Either include them or remove the dependency array.",["673"],"'useImperativeHandle' is defined but never used.","'gcards' is assigned a value but never used.","'setGcards' is assigned a value but never used.","'setShipping' is assigned a value but never used.","'total' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'card' and 'props.account'. Either include them or remove the dependency array.",["674"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["675"],"React Hook useEffect has a missing dependency: 'props.types'. Either include it or remove the dependency array. If 'setTypes' needs the current value of 'props.types', you can also switch to useReducer instead of useState and read 'props.types' in the reducer.",["676"],"'Fragment' is defined but never used.","'setImgSrc' is assigned a value but never used.","'setImgName' is assigned a value but never used.","'setid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'showModal'. Either include it or remove the dependency array.",["677"],["660"],["661"],"React Hook useEffect has a missing dependency: 'props.list'. Either include it or remove the dependency array. If 'setList' needs the current value of 'props.list', you can also switch to useReducer instead of useState and read 'props.list' in the reducer.",["678"],["679"],"React Hook useEffect has missing dependencies: 'fetchDataFromFireStore' and 'props.curShipping'. Either include them or remove the dependency array.",["680"],"'INITIALCARDFORM' is assigned a value but never used.","'setUserGcards' is assigned a value but never used.","'setTax' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getSum' and 'props.list'. Either include them or remove the dependency array. If 'setList' needs the current value of 'props.list', you can also switch to useReducer instead of useState and read 'props.list' in the reducer.",["681"],"React Hook useEffect has a missing dependency: 'getSum'. Either include it or remove the dependency array.",["682"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setItemPerPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getItemsForPage' and 'getTotalPageNumbers'. Either include them or remove the dependency array.",["683"],"React Hook useEffect has missing dependencies: 'getItemsForPage', 'getTotalPageNumbers', and 'props'. Either include them or remove the dependency array.",["684"],"React Hook useEffect has missing dependencies: 'getItemsForPage' and 'itemPerPage'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurList' needs the current value of 'itemPerPage'.",["685"],"'setIdChosenDiv' is assigned a value but never used.","'setIdChangeDiv' is assigned a value but never used.","'checkPropTypes' is defined but never used.","'lastPage' is assigned a value but never used.","'setLastPage' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'generatePageNo'. Either include it or remove the dependency array.",["686"],["687"],"React Hook useEffect has a missing dependency: 'SERVICESICONS'. Either include it or remove the dependency array.",["688"],"'useState' is defined but never used.","'preparedList' is defined but never used.","React Hook useEffect has a missing dependency: 'retrieveDocumentsFromFireStore'. Either include it or remove the dependency array.",["689"],"React Hook useEffect has a missing dependency: 'proccessedList.length'. Either include it or remove the dependency array.",["690"],"React Hook useEffect has missing dependencies: 'db', 'section', and 'sub'. Either include them or remove the dependency array.",["691"],"'id' is assigned a value but never used.","'currentTime' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchItems'. Either include it or remove the dependency array.",["692"],"React Hook useEffect has a missing dependency: 'prepareComponents'. Either include it or remove the dependency array.",["693"],"React Hook useEffect has a missing dependency: 'fetchListFromDb'. Either include it or remove the dependency array.",["694"],"React Hook useEffect has missing dependencies: 'makeComponentFromList' and 'preparedComponent.length'. Either include them or remove the dependency array.",["695"],"React Hook useEffect has a missing dependency: 'props.card'. Either include it or remove the dependency array.",["696"],"'LinkCards' is defined but never used.","'otherInfo' is assigned a value but never used.","'handleMatchingPassword' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleEditableSwapOfField' and 'handleSetcurrentAddress'. Either include them or remove the dependency array.",["697"],"React Hook useEffect has missing dependencies: 'props' and 'setCurrentPanel'. Either include them or remove the dependency array. Mutable values like 'props.current' aren't valid dependencies because mutating them doesn't re-render the component.",["698"],["699"],"'setID' is assigned a value but never used.","'selected' is assigned a value but never used.","'setDesiredField' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.list' and 'props.selected'. Either include them or remove the dependency array. If 'setList' needs the current value of 'props.list', you can also switch to useReducer instead of useState and read 'props.list' in the reducer.",["700"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"701","fix":"702"},{"desc":"703","fix":"704"},{"desc":"705","fix":"706"},{"desc":"707","fix":"708"},{"desc":"709","fix":"710"},{"desc":"711","fix":"712"},{"desc":"713","fix":"714"},{"desc":"709","fix":"715"},{"desc":"711","fix":"716"},{"desc":"713","fix":"717"},{"desc":"718","fix":"719"},{"desc":"720","fix":"721"},{"desc":"722","fix":"723"},{"desc":"724","fix":"725"},{"desc":"726","fix":"727"},{"desc":"728","fix":"729"},{"desc":"730","fix":"731"},{"desc":"732","fix":"733"},{"desc":"734","fix":"735"},{"desc":"736","fix":"737"},{"desc":"736","fix":"738"},{"desc":"739","fix":"740"},{"desc":"741","fix":"742"},{"desc":"743","fix":"744"},{"desc":"745","fix":"746"},{"desc":"747","fix":"748"},{"desc":"749","fix":"750"},{"desc":"751","fix":"752"},{"desc":"753","fix":"754"},{"desc":"755","fix":"756"},{"desc":"757","fix":"758"},{"desc":"759","fix":"760"},{"desc":"761","fix":"762"},{"desc":"763","fix":"764"},{"desc":"765","fix":"766"},{"desc":"767","fix":"768"},{"desc":"769","fix":"770"},{"desc":"730","fix":"771"},{"desc":"772","fix":"773"},"Update the dependencies array to be: [db, location.pathname, user]",{"range":"774","text":"775"},"Update the dependencies array to be: [db, user]",{"range":"776","text":"777"},"Update the dependencies array to be: [curType, getImgSrcFromType]",{"range":"778","text":"779"},"Update the dependencies array to be: [currentOption, getOptionItems, optionItems]",{"range":"780","text":"781"},"Update the dependencies array to be: [handlePreProcessingCardListToComponent]",{"range":"782","text":"783"},"Update the dependencies array to be: [confirmedAddedCard, db, props.accountID]",{"range":"784","text":"785"},"Update the dependencies array to be: [handlePreProcessingCardListToComponent, props.list]",{"range":"786","text":"787"},{"range":"788","text":"783"},{"range":"789","text":"785"},{"range":"790","text":"787"},"Update the dependencies array to be: [filterOrdersByEra]",{"range":"791","text":"792"},"Update the dependencies array to be: [getPasswordFromUser, user, userFound]",{"range":"793","text":"794"},"Update the dependencies array to be: [card, props.account]",{"range":"795","text":"796"},"Update the dependencies array to be: [card, props]",{"range":"797","text":"798"},"Update the dependencies array to be: [props.types]",{"range":"799","text":"800"},"Update the dependencies array to be: [props.hide, showModal]",{"range":"801","text":"802"},"Update the dependencies array to be: [props.list]",{"range":"803","text":"804"},"Update the dependencies array to be: [currentShipping, props]",{"range":"805","text":"806"},"Update the dependencies array to be: [fetchDataFromFireStore, props.curShipping]",{"range":"807","text":"808"},"Update the dependencies array to be: [getSum, props.list]",{"range":"809","text":"810"},{"range":"811","text":"810"},"Update the dependencies array to be: [getItemsForPage, getTotalPageNumbers]",{"range":"812","text":"813"},"Update the dependencies array to be: [getItemsForPage, getTotalPageNumbers, props, props.dalist]",{"range":"814","text":"815"},"Update the dependencies array to be: [curPage, getItemsForPage, itemPerPage]",{"range":"816","text":"817"},"Update the dependencies array to be: [generatePageNo, props.cur]",{"range":"818","text":"819"},"Update the dependencies array to be: [generatePageNo, props.pageNo]",{"range":"820","text":"821"},"Update the dependencies array to be: [SERVICESICONS]",{"range":"822","text":"823"},"Update the dependencies array to be: [retrieveDocumentsFromFireStore]",{"range":"824","text":"825"},"Update the dependencies array to be: [list, proccessedList.length]",{"range":"826","text":"827"},"Update the dependencies array to be: [db, proccessedList, props.match.params, section, sub]",{"range":"828","text":"829"},"Update the dependencies array to be: [fetchItems]",{"range":"830","text":"831"},"Update the dependencies array to be: [list, prepareComponents]",{"range":"832","text":"833"},"Update the dependencies array to be: [fetchListFromDb]",{"range":"834","text":"835"},"Update the dependencies array to be: [list, makeComponentFromList, preparedComponent.length]",{"range":"836","text":"837"},"Update the dependencies array to be: [props.card]",{"range":"838","text":"839"},"Update the dependencies array to be: [handleEditableSwapOfField, handleSetcurrentAddress]",{"range":"840","text":"841"},"Update the dependencies array to be: [props, setCurrentPanel]",{"range":"842","text":"843"},{"range":"844","text":"804"},"Update the dependencies array to be: [props.list, props.selected]",{"range":"845","text":"846"},[9008,9010],"[db, location.pathname, user]",[9519,9525],"[db, user]",[1679,1688],"[curType, getImgSrcFromType]",[998,1000],"[currentOption, getOptionItems, optionItems]",[9597,9599],"[handlePreProcessingCardListToComponent]",[9994,10014],"[confirmedAddedCard, db, props.accountID]",[10162,10174],"[handlePreProcessingCardListToComponent, props.list]",[8878,8880],[9275,9295],[9442,9454],[1229,1231],"[filterOrdersByEra]",[3269,3280],"[getPasswordFromUser, user, userFound]",[4056,4058],"[card, props.account]",[4126,4132],"[card, props]",[313,315],"[props.types]",[1109,1121],"[props.hide, showModal]",[224,226],"[props.list]",[3305,3322],"[currentShipping, props]",[3890,3892],"[fetchDataFromFireStore, props.curShipping]",[1561,1563],"[getSum, props.list]",[1662,1674],[1837,1839],"[getItemsForPage, getTotalPageNumbers]",[2131,2145],"[getItemsForPage, getTotalPageNumbers, props, props.dalist]",[2247,2256],"[curPage, getItemsForPage, itemPerPage]",[1067,1078],"[generatePageNo, props.cur]",[1151,1165],"[generatePageNo, props.pageNo]",[1084,1086],"[SERVICESICONS]",[1806,1808],"[retrieveDocumentsFromFireStore]",[1929,1935],"[list, proccessedList.length]",[2312,2347],"[db, proccessedList, props.match.params, section, sub]",[1762,1764],"[fetchItems]",[1824,1830],"[list, prepareComponents]",[1416,1418],"[fetchListFromDb]",[1567,1573],"[list, makeComponentFromList, preparedComponent.length]",[284,286],"[props.card]",[17539,17541],"[handleEditableSwapOfField, handleSetcurrentAddress]",[17674,17689],"[props, setCurrentPanel]",[284,286],[1913,1915],"[props.list, props.selected]"]